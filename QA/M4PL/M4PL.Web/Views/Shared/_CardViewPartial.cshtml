@*Copyright (2016) Meridian Worldwide Transportation Group
    //All Rights Reserved Worldwide
    //====================================================================================================================================================
    //Program Title:                                Meridian 4th Party Logistics(M4PL)
    //Programmer:                                   Prasanta
    //Date Programmed:                              12/02/2020
    //Program Name:                                 CardViewPartial
    //Purpose:                                      Provides view for the grid View
    //====================================================================================================================================================*@

@using System.Collections
@using M4PL.Web.Providers
@using M4PL.Utilities;
@using M4PL.Entities.Support;
@using DevExpress.Data.Filtering.Helpers;
@using M4PL.Entities
@using M4PL.Web.Models;
@using M4PL.APIClient.ViewModels.Job;


@model CardViewResult<JobCardViewView>

@{
    string fromName = "CardView";
    var cancelRoute = new MvcRoute(EntitiesAlias.JobCard, "DataView", "Job");
    cancelRoute.OwnerCbPanel = "AppCbPanel";
    cancelRoute.EntityName = "JobCard";
    cancelRoute.Url = string.Empty;
    //cancelRoute.Location = Model.Records.FirstOrDefault(x => x.) + ',' + Name + ',' + CustomerId;
}

@Html.DevExpress().CardView(settings =>
{
    settings.Name = "CardView";
    settings.CallbackRouteValues = new {   Controller = "JobCardView",
        Action = "CardView",
        Area = "Job",
        OwnerCbPanel = "JobAdvanceReportCbPanel"
    };
    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);

    settings.KeyFieldName = "Id";

    settings.SettingsPager.Visible = true;


    settings.SettingsPager.SettingsTableLayout.ColumnCount = 5;
    settings.SettingsPager.SettingsTableLayout.RowsPerPage = 5;
    settings.Styles.Card.CssClass = "custom-cardview";
    settings.Styles.Card.BackColor = System.Drawing.Color.White;
    settings.Styles.Table.BackColor = System.Drawing.Color.White;
    settings.Columns.Add("Id");
    settings.Columns.Add("CardCount");
    settings.Columns.Add("Name");
    settings.Columns.Add("CancelClick");
    settings.EnableCardsCache = true;
    settings.Settings.ShowGroupButtons = false;
    settings.Columns.Add(c =>
    {
        c.FieldName = "CardType";
        c.GroupIndex = 0;
    });

    settings.SetCardTemplateContent(c =>
    {

        ViewContext.Writer.Write(
            "<div class='custom-jobcard-divtile " + DataBinder.Eval(c.DataItem, "CardBackgroupColor") + "'  >" +
                "<p>" + DataBinder.Eval(c.DataItem, "Name") + "</p>" +
                "<p>" + DataBinder.Eval(c.DataItem, "CardCount") + "</p>" +
            "</div>"
        );
    });

    //settings.CardLayoutProperties.Items.AddGroupItem(g =>
    //{
    //    g.ShowCaption = DefaultBoolean.False;
    //    g.VerticalAlign = FormLayoutVerticalAlign.Middle;
    //    g.SettingsItemCaptions.Location = LayoutItemCaptionLocation.Top;
    //    g.GroupBoxDecoration = GroupBoxDecoration.None;

    //    g.Items.AddCommandItem(i =>
    //    {
    //        i.ShowSelectCheckbox = true;
    //        i.HorizontalAlign = FormLayoutHorizontalAlign.Right;
    //    });
    //    g.Items.Add("Name");
    //});

    settings.Settings.ShowGroupSelector = false;

    settings.SettingsBehavior.AllowSelectByCardClick = true;
    settings.SettingsBehavior.AllowFocusedCard = true;
    //settings.ClientSideEvents.CardClick = "OnCardSelectionChanged";
    settings.ClientSideEvents.SelectionChanged = string.Format("function(s, e, form, strRoute){{ M4PLCommon.VocReport.OnCardDataViewClick(s, e,  {0}, \'{1}\');}}", fromName, Newtonsoft.Json.JsonConvert.SerializeObject(cancelRoute)); 
    //string.Format("function(s, e, form, strRoute){{ M4PLCommon.VocReport.OnCardDataViewClick(s, e,  {0}, \'{1}\');}}", fromName, Newtonsoft.Json.JsonConvert.SerializeObject(cancelRoute));

    settings.Settings.ShowHeaderPanel = false;
    settings.SettingsPager.Mode = GridViewPagerMode.ShowAllRecords;
    settings.Settings.LayoutMode = DevExpress.Web.Layout.Breakpoints;
    settings.Styles.BreakpointsCard.Height = 130;

    settings.SettingsAdaptivity.BreakpointsLayoutSettings.CardsPerRow = 5;
    settings.SettingsAdaptivity.BreakpointsLayoutSettings.Breakpoints.Add(1400, 4);
    settings.SettingsAdaptivity.BreakpointsLayoutSettings.Breakpoints.Add(900, 3);
    settings.SettingsAdaptivity.BreakpointsLayoutSettings.Breakpoints.Add(700, 2);
    settings.SettingsAdaptivity.BreakpointsLayoutSettings.Breakpoints.Add(500, 1);
   
}).Bind(Model.Records).GetHtml()