@model M4PL.Entities.Support.TreeListBase

@{
    //var options = Model;
    var contentCbPanel = "JobDataViewCbPanel";
    Model.ContentRouteCallBack.OwnerCbPanel = contentCbPanel;
    Model.ContentRouteCallBack.Action = MvcConstants.ActionDataView;
    //string.Concat(Model.ContentRouteCallBack.Entity, Model.ContentRouteCallBack.Action, "CbPanel");
}
@Html.DevExpress().TreeView(
    settings =>
    {
        settings.Name = "cplTreeView";
        settings.AllowCheckNodes = Model.AllowCheckNodes;
        settings.AllowSelectNode = Model.AllowSelectNode;
        settings.CheckNodesRecursive = Model.CheckNodesRecursive;
        settings.EnableAnimation = Model.EnableAnimation;
        settings.EnableHotTrack = Model.EnableHottrack;
        settings.ShowTreeLines = Model.ShowTreeLines;
        settings.ShowExpandButtons = Model.ShowExpandButtons;

        if (!string.IsNullOrEmpty(Model.EventInit))
            settings.ClientSideEvents.Init = Model.EventInit;
        if (!string.IsNullOrEmpty(Model.EventExpandedChanged))
            settings.ClientSideEvents.ExpandedChanged = Model.EventExpandedChanged;
        if (Model.EnableCallback)
            settings.CallbackRouteValues = new { Controller = Model.Controller, Action = Model.Action, Area = Model.Area, ParentId = Model.ParentId, RecordId = Model.RecordId };
        if (Model.EnableNodeClick)
            settings.ClientSideEvents.NodeClick = "function(s,e,contentCbPanel,contentCbPanelRoute){DevExCtrl.TreeList.OnTreeViewNodeClick(s,e," + contentCbPanel + ",'" + Newtonsoft.Json.JsonConvert.SerializeObject(Model.ContentRouteCallBack) + "');}";

        settings.ShowExpandButtons = true;
        settings.Width = 300;
        if (Model != null && Model.Nodes != null)
        {
            foreach (var item in Model.Nodes)
            {
                settings.Nodes.Add(node =>
                {
                    node.Text = item.Text;
                    node.Image.IconID = item.IconCss;
                    node.Name = "_"+ item.Id.ToString();
                    if (item.Children != null && item.Children.Count() > 0)
                    {
                        foreach (var itemChild1 in item.Children)
                        {
                            node.Nodes.Add(subNode =>
                            {
                                subNode.Text = itemChild1.Text;
                                subNode.Image.IconID = itemChild1.IconCss;
                                subNode.Name = itemChild1.Id.ToString();
                                if (itemChild1.Children != null && itemChild1.Children.Count() > 0)
                                {
                                    foreach (var itemChild2 in itemChild1.Children)
                                    {
                                        subNode.Nodes.Add(subNodeChild =>
                                        {
                                            subNodeChild.Text = itemChild2.Text;
                                            subNodeChild.Image.IconID = itemChild2.IconCss;
                                            subNodeChild.Name = itemChild2.Id.ToString();
                                        });
                                    }
                                }
                            });
                        }
                    }

                });
            }
        }
        settings.PreRender = (s, e) =>
        {
            ASPxTreeView treeView = (ASPxTreeView)s;
            treeView.ExpandToDepth(-1);
            treeView.AllowSelectNode = true;
            treeView.CollapseAll();
        };
    }).GetHtml()