@using M4PL.Web.Providers
@model M4PL.APIClient.ViewModels.DropDownEditViewModel

@{
    ViewBag.Text = "Hello";
}

@Html.DevExpress().DropDownEdit(DDEsettings =>
{
    DDEsettings.Name = "NextGatewayMultiColumnDropDown";
    DDEsettings.SetDropDownWindowTemplateContent(set =>
    {
        Html.DevExpress().ListBox(listBoxSettings =>
        {
            listBoxSettings.Name = "NextGatewayMultiColumnDropDownCheckBox";
            listBoxSettings.ControlStyle.Border.BorderWidth = 0;
            listBoxSettings.ControlStyle.BorderBottom.BorderWidth = 1;
            listBoxSettings.Properties.ValueField = "Id";
            listBoxSettings.Properties.TextField = "PgdGatewayCode";

            listBoxSettings.Properties.ValueType = typeof(string);
            listBoxSettings.Properties.EnableSelectAll = true;
            listBoxSettings.Properties.FilteringSettings.ShowSearchUI = true;
            listBoxSettings.Properties.SelectionMode = ListEditSelectionMode.CheckColumn;
            listBoxSettings.Properties.ClientSideEvents.SelectedIndexChanged = "M4PLCommon.PrgGateway.OnListBoxSelectionChanged";
            //listBoxSettings.Properties.ClientSideEvents.Init = string.Format("function(s,e,selectedLocation) {{M4PLCommon.PrgGateway.InitDestinationListBox(s,e,{0})}}", Newtonsoft.Json.JsonConvert.SerializeObject(Model.SelectedDropDownStringArray));
            if (ViewData["AvailableGateways"] != null)
            {
                foreach (var item in (IList<M4PL.APIClient.ViewModels.Program.PrgRefGatewayDefaultView>)ViewData["AvailableGateways"])
                {
                    listBoxSettings.Properties.Items.Add(item.PgdGatewayCode, item.Id.ToString());
                }
            }

            if (Model.SelectedDropDownStringArray.Length != 0)
            {
                listBoxSettings.Init = (sender, e) =>
                {
                    MVCxListBox cbl = (MVCxListBox)sender;
                    foreach (ListEditItem item in cbl.Items)
                    {
                        item.Selected = Model.SelectedDropDownStringArray.Contains((string)item.Value);
                    }
                };
            }
        }).Render();
    });

    DDEsettings.Properties.AnimationType = AnimationType.None;
    DDEsettings.Properties.ClientSideEvents.TextChanged = "M4PLCommon.PrgGateway.SynchronizeListBoxValues";
    DDEsettings.Properties.ClientSideEvents.DropDown = "M4PLCommon.PrgGateway.SynchronizeListBoxValues";
    DDEsettings.Properties.ClientSideEvents.CloseUp = "M4PLCommon.PrgGateway.CloseUp";
    DDEsettings.Properties.Caption = "Next Gateway";

}).GetHtml()




