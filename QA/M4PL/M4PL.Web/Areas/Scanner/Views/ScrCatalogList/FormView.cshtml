@*Copyright (2016) Meridian Worldwide Transportation Group
    
    //====================================================================================================================================================
    //Program Title:                                Meridian 4th Party Logistics(M4PL)
    //Programmer:                                   Kirty Anurag
    //Date Programmed:                              13/10/2017
    //Program Name:                                 ScrCatalogListForm
    //Purpose:                                      Provides view for ScrCatalogList
    //====================================================================================================================================================*@

@using M4PL.Entities
@using System.Web.UI.WebControls
@using M4PL.Web.Providers
@model  M4PL.Web.Models.FormResult<M4PL.APIClient.ViewModels.Scanner.ScrCatalogListView>
@{
    ViewBag.Title = Model.PageName;
    Model.Record.CatalogProgramID = Model.Record.ParentId;
    Model.Record.CatalogItemNumber = Model.Record.Id == 0 ? Model.Record.ItemNumber : Model.Record.CatalogItemNumber;
    Model.Record.ArbRecordId = Model.Record.Id == 0 ? new Random().Next(-1000, 0) : Model.Record.Id;

    var cubesName = (Model.IsPopUp) ? "CatalogCubes" + WebApplicationConstants.PopupSuffix : "CatalogCubes";
    var catalogWidthName = (Model.IsPopUp) ? "CatalogWidth" + WebApplicationConstants.PopupSuffix : "CatalogWidth";
    var catalogLengthName = (Model.IsPopUp) ? "CatalogLength" + WebApplicationConstants.PopupSuffix : "CatalogLength";
    var catalogHeightName = (Model.IsPopUp) ? "CatalogHeight" + WebApplicationConstants.PopupSuffix : "CatalogHeight";

}

@using (Html.BeginForm(MvcConstants.ActionAddOrEdit, Model.CallBackRoute.Controller, FormMethod.Post, new { id = Model.FormId }))
{

    @Html.DevExpress().RoundPanel(settings =>
{
    settings.Name = "pnlBusinessTerm";
    settings.Width = Unit.Percentage(100);
    settings.AllowCollapsingByHeaderClick = true;
    settings.ShowCollapseButton = true;
    settings.HeaderText = "Detail";
    settings.Collapsed = false;
    settings.ControlStyle.CssClass = "form-layout";
    settings.SetContent(() =>
    {
        ViewContext.Writer.Write("<div class='col-md-11 col-lg-11 prg-catalogue-main no-padding'>");
        ViewContext.Writer.Write("<div class='col-md-9 col-lg-9 prg-catalogue no-padding'>");
        ViewContext.Writer.Write(Html.HiddenFor(m => m.Record.ArbRecordId, new { Name = "ArbRecordId" }).ToHtmlString());
        ViewContext.Writer.Write(Html.HiddenFor(m => m.Record.CatalogProgramID, new { Name = "CatalogProgramID" }).ToHtmlString());

        ViewContext.Writer.Write(string.Format(CssConstants.DivFormRowCls, CssConstants.ColFixed13, Html.EditorFor(m => m.Record.CatalogProgramIDName, new { Readonly = true, ParentColumnName = "CatalogProgramID" }).ToHtmlString()));
        ViewContext.Writer.Write(string.Format(CssConstants.DivFormRowCls, CssConstants.ColFixed13, Html.EditorFor(m => m.Record.StatusId, new { StatusId = Model.Record.StatusId }).ToHtmlString()));
        ViewContext.Writer.Write(string.Format(CssConstants.DivFormRowCls, CssConstants.ColFixed13, Html.EditorFor(m => m.Record.Id).ToHtmlString()));

        ViewContext.Writer.Write("<div class='col-md-11 col-lg-11 code-item-title   no-padding'>");
        ViewContext.Writer.Write(string.Format(CssConstants.DivFormRowCls, CssConstants.ColFixed5, Html.EditorFor(m => m.Record.CatalogItemNumber).ToHtmlString()));
        ViewContext.Writer.Write(string.Format(CssConstants.DivFormRowCls, CssConstants.ColFixed15, Html.EditorFor(m => m.Record.CatalogCode).ToHtmlString()));
        ViewContext.Writer.Write(string.Format(CssConstants.DivFormRowCls, CssConstants.ColFixed15, Html.EditorFor(m => m.Record.CatalogCustCode).ToHtmlString()));
        ViewContext.Writer.Write("<div class='form-row-group catelogue-title'>");
        ViewContext.Writer.Write(Html.EditorFor(m => m.Record.CatalogTitle).ToHtmlString());
        ViewContext.Writer.Write("</div>");
        ViewContext.Writer.Write("<div class='form-row-group col-fixed-13'>");
        ViewContext.Writer.Write(Html.EditorFor(m => m.Record.CatalogUoMCode).ToHtmlString());
        ViewContext.Writer.Write("</div>");

        ViewContext.Writer.Write("</div>");




        ViewContext.Writer.Write("<div class='form-row-group col-fixed-13 iteminput-hide'>");
        ViewContext.Writer.Write(Html.EditorFor(m => m.Record.CatalogWidth, new { MaskFormat = WebApplicationConstants.MaskFixedPointDecimal, OnChangeEvent = "DevExCtrl.Decimal.CalculateCubes(s, e," + cubesName + ", " + catalogLengthName + ", " + catalogHeightName + ");" }).ToHtmlString());
        ViewContext.Writer.Write("</div>");
        ViewContext.Writer.Write("<div class='form-row-group col-fixed-13 iteminput-hide'>");
        ViewContext.Writer.Write(Html.EditorFor(m => m.Record.CatalogLength, new { MaskFormat = WebApplicationConstants.MaskFixedPointDecimal, OnChangeEvent = "DevExCtrl.Decimal.CalculateCubes(s, e," + cubesName + ", " + catalogWidthName + ", " + catalogHeightName + ");" }).ToHtmlString());
        ViewContext.Writer.Write("</div>");
        ViewContext.Writer.Write("<div class='form-row-group col-fixed-13 iteminput-hide'>");
        ViewContext.Writer.Write(Html.EditorFor(m => m.Record.CatalogHeight, new { MaskFormat = WebApplicationConstants.MaskFixedPointDecimal, OnChangeEvent = "DevExCtrl.Decimal.CalculateCubes(s, e," + cubesName + ", " + catalogWidthName + ", " + catalogLengthName + ");" }).ToHtmlString());
        ViewContext.Writer.Write("</div>");
        ViewContext.Writer.Write("<div class='form-row-group col-fixed-13 iteminput-hide'>");
        ViewContext.Writer.Write(Html.EditorFor(m => m.Record.CatalogCubes, new { MaskFormat = WebApplicationConstants.MaskFixedPointDecimal }).ToHtmlString());
        ViewContext.Writer.Write("</div>");
        ViewContext.Writer.Write("<div class='form-row-group col-fixed-13 iteminput-hide'>");
        ViewContext.Writer.Write(Html.EditorFor(m => m.Record.CatalogWLHUoM, new { CatalogWLHUoM = Model.Record.CatalogWLHUoM }).ToHtmlString());
        ViewContext.Writer.Write("</div>");
        ViewContext.Writer.Write("<div class='form-row-group col-fixed-13'>");

        ViewContext.Writer.Write(Html.EditorFor(m => m.Record.CatalogWeight, new { CatalogWeight = Model.Record.CatalogWeight }).ToHtmlString());
        ViewContext.Writer.Write("</div>");

        ViewContext.Writer.Write("</div>");


        ViewContext.Writer.Write("<div class='col-md-1 col-lg-1 no-padding'>");
        ViewContext.Writer.Write(string.Format(CssConstants.DivFormRowCls, string.Concat(CssConstants.ColFixed5, " ", CssConstants.AutoHeightWidth), Html.EditorFor(m => m.Record.CatalogPhoto, "FileUpload").ToHtmlString()));
        ViewContext.Writer.Write("</div>");

        ViewContext.Writer.Write("</div>");
    });
}).GetHtml()

    @Html.DevExpress().RoundPanel(settings =>
    {
        settings.Name = "pnlCatalogDesc";
        settings.Width = Unit.Percentage(100);
        settings.AllowCollapsingByHeaderClick = true;
        settings.ShowCollapseButton = true;
        settings.HeaderText = "Description";
        settings.Collapsed = true;
        settings.ControlStyle.CssClass = "form-layout";
        settings.SetContent(() =>
        {
            Html.RenderAction(MvcConstants.ActionRichEditDescription, Model.CallBackRoute.Controller, new { Area = Model.CallBackRoute.Area, docId = new M4PL.Entities.Support.Filter { FieldName = "ArbRecordId", Value = Model.Record.ArbRecordId.ToString() }, viewRecord = Model.Record, isPopup = Model.IsPopUp });
        });
    }).GetHtml()

    @Html.Partial(MvcConstants.EnteredChangedPartial, new M4PL.Web.Models.FormResult<BaseModel> { Record = Model.Record, ColumnSettings = Model.ColumnSettings, FormId = Model.FormId, IsPopUp = Model.IsPopUp  })
    if (!Model.IsPopUp)
    {
        <div class="form-btns-block">
            <div class="half-width">
                @Html.DevExpress().Button(settings =>
           {
               settings.Name = "btn" + Model.CallBackRoute.Controller + "Save";//The name standard dependent on Ribbon's 'Save' functionality.Please make changes BaseController 'Ribbon' region 'Save' action
               settings.EnableTheming = true;
               settings.Text = (Model.Record.Id > 0) ? Model.Operations[OperationTypeEnum.Update].LangName : Model.Operations[OperationTypeEnum.Save].LangName;
               settings.AllowFocus = false;
               settings.ControlStyle.CssClass = "form-btn pull-right";
               settings.Enabled = (Model.Record.Id > 0) ? !(Model.Permission < Permission.EditAll) : !(Model.Permission < Permission.AddEdit);
               settings.ClientSideEvents.Click = Model.SubmitClick;
               settings.Images.Image.Url = WebExtension.ConvertByteToString(Model.Operations[(Model.Record.Id > 0) ? OperationTypeEnum.Edit : OperationTypeEnum.New].Icon);
           }).GetHtml()
            </div>
            <div class="half-width">
                @Html.DevExpress().Button(settings =>
       {
           settings.Name = "btn" + Model.CallBackRoute.Controller + "Cancel";
           settings.EnableTheming = true;
           settings.Text = Model.Operations[OperationTypeEnum.Cancel].LangName;
           settings.AllowFocus = false;
           settings.ControlStyle.CssClass = "form-btn pull-left";
           settings.ClientSideEvents.Click = Model.CancelClick; settings.Images.Image.Url = WebExtension.ConvertByteToString(Model.Operations[OperationTypeEnum.Cancel].Icon);
       }).GetHtml()
            </div>
        </div>
    }
}