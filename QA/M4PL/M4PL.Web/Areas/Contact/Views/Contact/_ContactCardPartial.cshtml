@*Copyright (2016) Meridian Worldwide Transportation Group
    //All Rights Reserved Worldwide
    //====================================================================================================================================================
    //Program Title:                                Meridian 4th Party Logistics(M4PL)
    //Programmer:                                   Akhil
    //Date Programmed:                              13/10/2017
    //Program Name:                                 _ContactCardPartial
    //Purpose:                                      Provides view for Contact Card Pop up
    //====================================================================================================================================================*@
@using M4PL.Entities
@using M4PL.Entities.Support;
@using System.Web.UI.WebControls
@using System.Web.Mvc
@using M4PL.Web.Providers
@model  M4PL.Web.Models.FormResult<M4PL.APIClient.ViewModels.Contact.ContactView>
@{
    ViewBag.Title = Model.PageName;
    var businessStateDropDownViewModel = Model.Record.ConBusinessStateId.GetValueOrDefault().GetStateDropDown("ConBusinessStateId", Model.ColumnSettings.FirstOrDefault("ConBusinessStateId").ColAliasName, Model.ColumnSettings.FirstOrDefault("ConBusinessStateId").IsRequired, Model.IsPopUp, Model.Permission);
}

@using (Html.BeginForm(MvcConstants.ActionAddOrEdit, EntitiesAlias.Contact.ToString(), FormMethod.Post, new { id = Model.FormId, @class = "contact-form" }))
{

    <div class="contact-card-partial">
        <div class="col-lg-12 col-md-12 no-padding">
            <div class="col-lg-2 col-md-2 col-sm-2 form-row-group no-padding col-fixed-10">
                @Html.EditorFor(m => m.Record.Id, new { NameSuffix = Model.ControlNameSuffix })
            </div>
            <div class="col-lg-2 col-md-2 col-sm-2 col-fixed-5 no-padding form-row-group">
                @Html.EditorFor(m => m.Record.ConTitleId, new { ConTitleId = Model.Record.ConTitleId, NameSuffix = Model.ControlNameSuffix })
            </div>
            <div class="col-lg-2 col-md-2 col-sm-2 form-row-group no-padding col-fixed-25">
                @Html.EditorFor(m => m.Record.ConFirstName, new { NameSuffix = Model.ControlNameSuffix })
            </div>
            <div class="col-lg-2 col-md-2 col-sm-2 form-row-group no-padding col-fixed-25">
                @Html.EditorFor(m => m.Record.ConMiddleName, new { NameSuffix = Model.ControlNameSuffix })
            </div>
            <div class="col-lg-2 col-md-2 col-sm-2 form-row-group no-padding col-fixed-25 remove-margin-right">
                @Html.EditorFor(m => m.Record.ConLastName, new { NameSuffix = Model.ControlNameSuffix })
            </div>
        </div>

        <div class="col-lg-12 col-md-12 no-padding">
            <div class="col-lg-5 col-md-5 col-sm-5 no-padding contact-card-jobtitle form-row-group">
                @Html.EditorFor(m => m.Record.ConJobTitle, new { NameSuffix = Model.ControlNameSuffix })
            </div>
            @if (Model.SessionProvider != null && Model.SessionProvider.ActiveUser != null)
            {
                <div class="col-lg-5 col-md-5 col-sm-5 no-padding contact-card-company form-row-group remove-margin-right">
                    @Html.EditorFor(m => m.SessionProvider.ActiveUser.OrganizationName, new { NameSuffix = Model.ControlNameSuffix, Readonly = true, AssociatedColumnName = "ConOrgId" })
                </div>
            }
        </div>

        <div class="col-lg-12 col-md-12 no-padding">
            <div class="col-lg-4 col-md-4 col-sm-4 business-phone no-padding form-row-group">
                @Html.EditorFor(m => m.Record.ConBusinessPhone, new { NameSuffix = Model.ControlNameSuffix, MakeSkypeCall = true })
            </div>
            <div class="col-lg-2 col-md-2 col-sm-2 col-fixed-18 no-padding form-row-group">
                @Html.EditorFor(m => m.Record.ConBusinessPhoneExt, new { NameSuffix = Model.ControlNameSuffix })
            </div>
            <div class="col-lg-4 col-md-4 col-sm-4 mobile-phone no-padding form-row-group">
                @Html.EditorFor(m => m.Record.ConMobilePhone, new { NameSuffix = Model.ControlNameSuffix, MakeSkypeCall = true })
            </div>
            <div class="col-lg-2 col-md-2 col-sm-2 col-fixed-18 no-padding form-row-group remove-margin-right">
                @Html.EditorFor(m => m.Record.ConTypeId, new { ConTypeId = Model.Record.ConTypeId })
            </div>
        </div>
        <div class="col-lg-12 col-md-12 no-padding">
            <div class="col-lg-6 col-md-6 col-sm-6 contact-card-jobtitle no-padding form-row-group">
                @Html.EditorFor(m => m.Record.ConEmailAddress, new { NameSuffix = Model.ControlNameSuffix })
            </div>
            <div class="col-lg-6 col-md-6 col-sm-6 contact-card-company no-padding form-row-group remove-margin-right">
                @Html.EditorFor(m => m.Record.ConEmailAddress2, new { NameSuffix = Model.ControlNameSuffix })
            </div>
        </div>

        <div class="col-lg-12 col-md-12 no-padding">
            <div class="col-lg-11 col-md-11 col-sm-11 col-fixed-addr no-padding form-row-group remove-margin-right">
                @Html.EditorFor(m => m.Record.ConBusinessAddress1, new { NameSuffix = Model.ControlNameSuffix })
            </div>
        </div>

        <div class="col-lg-12 col-md-12 no-padding">
            <div class="col-lg-11 col-md-11 col-sm-11 col-fixed-addr no-padding form-row-group remove-margin-right">
                @Html.EditorFor(m => m.Record.ConBusinessAddress2, new { NameSuffix = Model.ControlNameSuffix })
            </div>
        </div>

        <div class="col-lg-12 col-md-12 no-padding">
            <div class="col-lg-6 col-md-6 col-sm-6 contact-card-jobtitle no-padding form-row-group">
                @Html.EditorFor(m => m.Record.ConBusinessCity, new { NameSuffix = Model.ControlNameSuffix })
            </div>
            <div class="col-lg-6 col-md-6 col-sm-6 contact-card-company no-padding form-row-group remove-margin-right">
                @Html.EditorFor(m => m.Record.ConBusinessZipPostal, new { NameSuffix = Model.ControlNameSuffix })
            </div>
        </div>

        <div class="col-lg-12 col-md-12 no-padding">
            <div class="col-lg-6 col-md-6 col-sm-6 contact-card-jobtitle no-padding form-row-group">
                @Html.Action(MvcConstants.ActionIntDropDownViewTemplate, EntitiesAlias.Common.ToString(), new { Area = string.Empty, strDropDownViewModel = Newtonsoft.Json.JsonConvert.SerializeObject(businessStateDropDownViewModel) })
            </div>
            <div class="col-lg-6 col-md-6 col-sm-6 contact-card-company no-padding form-row-group remove-margin-right">
                @Html.EditorFor(m => m.Record.ConBusinessCountryId, new { ConBusinessCountryId = Model.Record.ConBusinessCountryId, NameSuffix = Model.ControlNameSuffix })
            </div>
        </div>
    </div>

}