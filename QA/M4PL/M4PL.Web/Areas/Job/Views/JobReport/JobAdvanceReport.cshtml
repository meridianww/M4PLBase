@*Copyright (2016) Meridian Worldwide Transportation Group
    //All Rights Reserved Worldwide
    //====================================================================================================================================================
    //Program Title:                                Meridian 4th Party Logistics(M4PL)
    //Programmer:                                   KIRTY
    //Date Programmed:                              12/12/2019
    //Program Name:                                 JobAdvanceReportView
    //Purpose:                                      Provides view for the JobReport with advance search and filter
    //====================================================================================================================================================*@

@using M4PL.Web.Providers
@using M4PL.Entities
@using M4PL.Entities.Support;
@using System.Web.UI.WebControls
@using M4PL.Web.Models;
@using M4PL.APIClient.ViewModels.Job;
@using M4PL.Web.Providers;
@using M4PL.Utilities;
@model  M4PL.Web.Models.ReportResult<M4PL.APIClient.ViewModels.Job.JobReportView>
@{
    Model.ReportRoute.OwnerCbPanel = string.Concat(Model.ReportRoute.Controller, Model.ReportRoute.Action, "CbPanel");
    var customerDropdown = Model.Record.CompanyId.GetCustomerCompanyDropDown("Customer", Model, (Model.Record.ParentId > 0) ? Model.Record.ParentId : Model.SessionProvider.ActiveUser.OrganizationId, true);
    customerDropdown.OnInit = "M4PLCommon.AdvancedReport.DefaultSelectedCustomer(s,e);";
    customerDropdown.ValueChangedEvent = string.Format("function(s, e) {{DevExCtrl.ComboBox.ProgramByCustomerCbPanelChange(s, e)}}");
    Model.ReportRoute.StartDate = Model.Record.StartDate;
    Model.ReportRoute.EndDate = Model.Record.EndDate;

    //var scheduleDropDownViewModel = Model.Record.Scheduled.GetValueOrDefault().GetScheduleDropDown("Scheduled", Model.ColumnSettings.FirstOrDefault("Scheduled").ColAliasName, Model.ColumnSettings.FirstOrDefault("Scheduled").IsRequired, Model.IsPopUp, Model.Permission);
    //var orderTypeDropDownViewModel = Model.Record.OrderType.GetValueOrDefault().GetOrderTypeDropDown("OrderType", Model.ColumnSettings.FirstOrDefault("OrderType").ColAliasName, Model.ColumnSettings.FirstOrDefault("OrderType").IsRequired, Model.IsPopUp, Model.Permission);
    //var jobStatusIdDropDownViewModel = Model.Record.JobStatusId.GetValueOrDefault().GetJobStatusIdDropDown("JobStatusId", Model.ColumnSettings.FirstOrDefault("JobStatusId").ColAliasName, Model.ColumnSettings.FirstOrDefault("JobStatusId").IsRequired, Model.IsPopUp, Model.Permission);


    #region
    //foreach (var colSetting in Model.ColumnSettings)
    //{
    //    if (ViewData[WebApplicationConstants.CommonCommand] != null && colSetting.ColLookupId > 0 && ViewData[WebApplicationConstants.CommonCommand] is M4PL.APIClient.Common.ICommonCommands)
    //    {
    //        var allIdRefLangNames = (IList<M4PL.Entities.Support.IdRefLangName>)(ViewData[WebApplicationConstants.CommonCommand] as M4PL.APIClient.Common.ICommonCommands).GetIdRefLangNames(colSetting.ColLookupId);
    //        if (colSetting.ColLookupId == LookupEnums.Scheduled.ToInt())
    //        {
    //            var allStatuses = WebExtension.GetSystemSettingValue(Model.SessionProvider.UserSettings.Settings, WebApplicationConstants.SysLookupId);
    //            if (!string.IsNullOrWhiteSpace(allStatuses))
    //            {
    //                var allStatus = Enumerable.ToList(Extension.SplitComma(allStatuses));
    //                allIdRefLangNames = allIdRefLangNames.Where(x => allStatus.Contains(x.SysRefId.ToString())).ToList();
    //            }
    //        }
    //        if (colSetting.ColLookupId == LookupEnums.OrderType.ToInt())
    //        {
    //            var allStatuses = WebExtension.GetSystemSettingValue(Model.SessionProvider.UserSettings.Settings, WebApplicationConstants.SysLookupId);
    //            if (!string.IsNullOrWhiteSpace(allStatuses))
    //            {
    //                var allStatus = Enumerable.ToList(Extension.SplitComma(allStatuses));
    //                allIdRefLangNames = allIdRefLangNames.Where(x => allStatus.Contains(x.SysRefId.ToString())).ToList();
    //            }
    //        }
    //        if (colSetting.ColLookupId == LookupEnums.StatusJob.ToInt())
    //        {
    //            var allStatuses = WebExtension.GetSystemSettingValue(Model.SessionProvider.UserSettings.Settings, WebApplicationConstants.SysLookupId);
    //            if (!string.IsNullOrWhiteSpace(allStatuses))
    //            {
    //                var allStatus = Enumerable.ToList(Extension.SplitComma(allStatuses));
    //                allIdRefLangNames = allIdRefLangNames.Where(x => allStatus.Contains(x.SysRefId.ToString())).ToList();
    //            }
    //        }
    //    }
    //}
    #endregion
}

@Html.DevExpress().RoundPanel(settings =>
{
    settings.Name = "pnlJobAdvanceReport";
    settings.Width = Unit.Percentage(100);
    settings.AllowCollapsingByHeaderClick = true;
    settings.ShowCollapseButton = true;
    settings.HeaderText = "Job Advance Report";
    settings.Collapsed = false;
    settings.ControlStyle.CssClass = "form-layout";
    settings.SetContent(() =>
    {
        ViewContext.Writer.Write("<div class='col-lg-12 col-md-12 col-sm-12 form-group'>");
        ViewContext.Writer.Write("<div class='col-lg-3 col-md-3 col-sm-3 form-group'>");
        ViewContext.Writer.Write(Html.Action(MvcConstants.ActionDropDownViewTemplate, M4PL.Entities.EntitiesAlias.Common.ToString(), new { Area = string.Empty, strDropDownViewModel = Newtonsoft.Json.JsonConvert.SerializeObject(customerDropdown) }));
        ViewContext.Writer.Write("</div>");
        ViewContext.Writer.Write("<div class='col-lg-3 col-md-3 col-sm-3 form-group'>");
        ViewContext.Writer.Write(Html.Partial("ProgramByCustomer", Model));
        ViewContext.Writer.Write("</div>");
        ViewContext.Writer.Write("<div class='col-lg-3 col-md-3 col-sm-3 form-group'>");
        ViewContext.Writer.Write(Html.Partial("OrginByCustomer", Model));
        ViewContext.Writer.Write("</div>");
        ViewContext.Writer.Write("<div class='col-lg-3 col-md-3 col-sm-3 form-group'>");
        ViewContext.Writer.Write(Html.Partial("DestinationByProgramCustomer", Model));
        ViewContext.Writer.Write("</div>");
        ViewContext.Writer.Write("</div>");

        ViewContext.Writer.Write("<div class='col-lg-12 col-md-12 col-sm-12 form-group'>");
        ViewContext.Writer.Write("<div class='col-lg-3 col-md-3 col-sm-3 form-group'>");
        ViewContext.Writer.Write(Html.Partial("BrandByProgramCustomer", Model));
        ViewContext.Writer.Write("</div>");
        ViewContext.Writer.Write("<div class='col-lg-3 col-md-3 col-sm-3 form-group'>");
        ViewContext.Writer.Write(Html.Partial("GatewayStatusByProgramCustomer", Model));
        ViewContext.Writer.Write("</div>");
        ViewContext.Writer.Write("<div class='col-lg-3 col-md-3 col-sm-3 form-group'>");
        ViewContext.Writer.Write(Html.Partial("ServiceModeByCustomer", Model));
        ViewContext.Writer.Write("</div>");
        ViewContext.Writer.Write("<div class='col-lg-3 col-md-3 col-sm-3 form-group'>");
        ViewContext.Writer.Write(Html.Partial("ProductTypeByCustomer", Model));
        ViewContext.Writer.Write("</div>");
        ViewContext.Writer.Write("</div>");

        ViewContext.Writer.Write("<div class='col-lg-12 col-md-12 col-sm-12 form-group'>");
        ViewContext.Writer.Write("<div class='col-lg-3 col-md-3 col-sm-3 form-group'>");
        ViewContext.Writer.Write(Html.Partial("ScheduleByCustomer", Model));
        ViewContext.Writer.Write("</div>");
        ViewContext.Writer.Write("<div class='col-lg-3 col-md-3 col-sm-3 form-group'>");
        ViewContext.Writer.Write(Html.Partial("OrderTypeByCustomer", Model));
        ViewContext.Writer.Write("</div>");
        ViewContext.Writer.Write("<div class='col-lg-3 col-md-3 col-sm-3 form-group'>");
        ViewContext.Writer.Write(Html.EditorFor(t => t.Record.StartDate));
        ViewContext.Writer.Write("</div>");
        ViewContext.Writer.Write("<div class='col-lg-3 col-md-3 col-sm-3 form-group'>");
        ViewContext.Writer.Write(Html.EditorFor(t => t.Record.EndDate));
        ViewContext.Writer.Write("</div>");
        ViewContext.Writer.Write("</div>");


        ViewContext.Writer.Write("<div class='col-lg-12 col-md-12 col-sm-12 form-group'>");
        ViewContext.Writer.Write("<div class='col-lg-3 col-md-3 col-sm-3 form-group'>");
        ViewContext.Writer.Write(Html.EditorFor(t => t.Record.Mode));
        ViewContext.Writer.Write("</div>");
        ViewContext.Writer.Write("<div class='col-lg-3 col-md-3 col-sm-3 form-group'>");
        ViewContext.Writer.Write(Html.Partial("JobStatusByCustomer", Model));
        ViewContext.Writer.Write("</div>");
        ViewContext.Writer.Write("<div class='col-lg-3 col-md-3 col-sm-3 form-group'>");
        ViewContext.Writer.Write(Html.EditorFor(t => t.Record.Search));
        ViewContext.Writer.Write("</div>");
        ViewContext.Writer.Write("</div>");

        //ViewContext.Writer.Write("<div class='col-lg-12 col-md-12 col-sm-12 form-group'>");

        //ViewContext.Writer.Write("<div class='col-lg-4 col-md-4 col-sm-4 form-group'>");
        ////ViewContext.Writer.Write(Html.DevExpress().Button(set =>
        ////{
        ////    set.Name = "btn";
        ////    set.EnableTheming = true;
        ////    set.Text = "Advance Report";
        ////    set.AllowFocus = false;
        ////    set.ControlStyle.CssClass = "form-btn";
        ////}).GetHtml());
        //ViewContext.Writer.Write("</div>");
        //ViewContext.Writer.Write("</div>");
    });
}).GetHtml()

