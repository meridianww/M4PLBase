@*Copyright (2016) Meridian Worldwide Transportation Group
    //All Rights Reserved Worldwide
    //====================================================================================================================================================
    //Program Title:                                Meridian 4th Party Logistics(M4PL)
    //Programmer:                                   Akhil
    //Date Programmed:                              13/10/2017
    //Program Name:                                 JobCargoFormView
    //Purpose:                                      Provides view for JobCargo's detail
    //====================================================================================================================================================*@

@using M4PL.Entities
@using System.Web.UI.WebControls
@using M4PL.Web.Providers
@model  M4PL.Web.Models.FormResult<M4PL.APIClient.ViewModels.Job.JobCargoView>
@{
    ViewBag.Title = Model.PageName;

    Model.Record.JobID = Model.Record.ParentId;
    Model.Record.CgoLineItem = Model.Record.Id == 0 ? Model.Record.ItemNumber : Model.Record.CgoLineItem;
    var qtyExpectedCtrl = (Model.IsPopUp) ? "CgoQtyExpected" + WebApplicationConstants.PopupSuffix : "CgoQtyExpected";
    var qtyOnHandCtrl = (Model.IsPopUp) ? "CgoQtyOnHand" + WebApplicationConstants.PopupSuffix : "CgoQtyOnHand";
    var qtyOnHoldCtrl = (Model.IsPopUp) ? "CgoQtyOnHold" + WebApplicationConstants.PopupSuffix : "CgoQtyOnHold";
    var qtyDamagedCtrl = (Model.IsPopUp) ? "CgoQtyDamaged" + WebApplicationConstants.PopupSuffix : "CgoQtyDamaged";
    var qtyStartOverCtrl = (Model.IsPopUp) ? "CgoQtyShortOver" + WebApplicationConstants.PopupSuffix : "CgoQtyShortOver";
}

@if (!Model.IsPopUp && (Model.Record.Id > 0))
{
    @Html.Partial(MvcConstants.NavigationPanePartial, Model.NavigationPane);
}

@using (Html.BeginForm(MvcConstants.ActionAddOrEdit, Model.CallBackRoute.Controller, FormMethod.Post, new { id = Model.FormId, @class = "col-lg-12 col-md-12" }))
{
    <div class="job-cargo-pnl-group">
        <div class="col-sm-10 col-md-10 col-lg-10 job-cargo-panel no-padding-left">
            @Html.DevExpress().RoundPanel(settings =>
       {
           settings.Name = "pnlJobCargo";
           settings.Width = Unit.Percentage(100);
           settings.AllowCollapsingByHeaderClick = true;
           settings.ShowCollapseButton = true;
           settings.HeaderText = "Job Cargo";
           settings.Collapsed = false;
           settings.ControlStyle.CssClass = "form-layout";
           settings.SetContent(() =>
           {
               ViewContext.Writer.Write("<div class='form-row-group col-fixed-13'>" + Html.EditorFor(m => m.Record.Id).ToHtmlString() + "</div>");
               ViewContext.Writer.Write("<div class='form-row-group col-fixed-13'>" + Html.EditorFor(m => m.Record.JobID).ToHtmlString() + "</div>");
               ViewContext.Writer.Write("<div class='col-sm-11 col-md-11 col-lg-11 code-item-title no-padding'>");
               ViewContext.Writer.Write("<div class='form-row-group col-fixed-5 iteminput-hide'>" + Html.EditorFor(m => m.Record.CgoLineItem).ToHtmlString() + "</div>");
               ViewContext.Writer.Write("<div class='form-row-group col-fixed-20'>" + Html.EditorFor(m => m.Record.CgoPartNumCode).ToHtmlString() + "</div>");
               ViewContext.Writer.Write("<div class='form-row-group col-fixed-20'>" + Html.EditorFor(m => m.Record.CgoSerialNumber).ToHtmlString() + "</div>");
               ViewContext.Writer.Write("<div class='form-row-group col-fixed-50'>" + Html.EditorFor(m => m.Record.CgoTitle).ToHtmlString() + "</div>");
               ViewContext.Writer.Write("</div>");
               ViewContext.Writer.Write("<div class='col-sm-11 col-md-11 col-lg-11 job-cargo-lwh no-padding'>");
               ViewContext.Writer.Write("<div class='form-row-group col-fixed-10'>" + Html.EditorFor(m => m.Record.CgoPackagingType, new { CgoPackagingType = Model.Record.CgoPackagingType }).ToHtmlString() + "</div>");
               ViewContext.Writer.Write("<div class='form-row-group col-fixed-10'>" + Html.EditorFor(m => m.Record.CgoMasterCartonLabel).ToHtmlString() + "</div>");
               ViewContext.Writer.Write("<div class='form-row-group col-fixed-10 iteminput-hide'>" + Html.EditorFor(m => m.Record.CgoWeight).ToHtmlString() + "</div>");
               ViewContext.Writer.Write("<div class='form-row-group col-fixed-10'>" + Html.EditorFor(m => m.Record.CgoWeightUnits, new { IsEditable = true, CgoWeightUnits = Model.Record.CgoWeightUnits, IsRecordEdit = (Model.Record.Id > 0) }).ToHtmlString() + "</div>");
               ViewContext.Writer.Write("<div class='form-row-group col-fixed-10 iteminput-hide'>" + Html.EditorFor(m => m.Record.CgoLength).ToHtmlString() + "</div>");
               ViewContext.Writer.Write("<div class='form-row-group col-fixed-10 iteminput-hide'>" + Html.EditorFor(m => m.Record.CgoWidth).ToHtmlString() + "</div>");
               ViewContext.Writer.Write("<div class='form-row-group col-fixed-10 iteminput-hide no-margin-right'>" + Html.EditorFor(m => m.Record.CgoHeight).ToHtmlString() + "</div>");
               ViewContext.Writer.Write("</div>");
               ViewContext.Writer.Write("<div class='form-row-group col-fixed-10'>" + Html.EditorFor(m => m.Record.CgoVolumeUnits, new { IsEditable = true, CgoVolumeUnits = Model.Record.CgoVolumeUnits, IsRecordEdit = (Model.Record.Id > 0) }).ToHtmlString() + "</div>");
               ViewContext.Writer.Write("<div class='form-row-group col-fixed-10 iteminput-hide'>" + Html.EditorFor(m => m.Record.CgoCubes).ToHtmlString() + "</div>");

               ViewContext.Writer.Write("<div class='col-sm-11 col-md-11 col-lg-11 quantity-expected no-padding'>");
               ViewContext.Writer.Write("<div class='form-row-group col-fixed-10 iteminput-hide'>" + Html.EditorFor(m => m.Record.CgoQtyExpected, new { OnChangeEvent = "DevExCtrl.Decimal.QuantityChanged(s, e, " + qtyExpectedCtrl + ", " + qtyOnHandCtrl + ", " + qtyOnHoldCtrl + ", " + qtyDamagedCtrl + ", " + qtyStartOverCtrl + ");" }).ToHtmlString() + "</div>");
               ViewContext.Writer.Write("<div class='form-row-group col-fixed-10 iteminput-hide'>" + Html.EditorFor(m => m.Record.CgoQtyOnHand, new { OnChangeEvent = "DevExCtrl.Decimal.QuantityChanged(s, e, " + qtyExpectedCtrl + ", " + qtyOnHandCtrl + ", " + qtyOnHoldCtrl + ", " + qtyDamagedCtrl + ", " + qtyStartOverCtrl + ");" }).ToHtmlString() + "</div>");
               ViewContext.Writer.Write("<div class='form-row-group col-fixed-10 iteminput-hide'>" + Html.EditorFor(m => m.Record.CgoQtyDamaged, new { OnChangeEvent = "DevExCtrl.Decimal.QuantityChanged(s, e, " + qtyExpectedCtrl + ", " + qtyOnHandCtrl + ", " + qtyOnHoldCtrl + ", " + qtyDamagedCtrl + ", " + qtyStartOverCtrl + ");" }).ToHtmlString() + "</div>");
               ViewContext.Writer.Write("<div class='form-row-group col-fixed-10 iteminput-hide'>" + Html.EditorFor(m => m.Record.CgoQtyOnHold, new { OnChangeEvent = "DevExCtrl.Decimal.QuantityChanged(s, e, " + qtyExpectedCtrl + ", " + qtyOnHandCtrl + ", " + qtyOnHoldCtrl + ", " + qtyDamagedCtrl + ", " + qtyStartOverCtrl + ");" }).ToHtmlString() + "</div>");
               ViewContext.Writer.Write("<div class='form-row-group col-fixed-10 iteminput-hide'>" + Html.EditorFor(m => m.Record.CgoQtyShortOver).ToHtmlString() + "</div>");
               ViewContext.Writer.Write("<div class='form-row-group col-fixed-10 iteminput-hide'>" + Html.EditorFor(m => m.Record.CgoQtyUnits, new { IsEditable = true, CgoQtyUnits = Model.Record.CgoQtyUnits, IsRecordEdit = (Model.Record.Id > 0) }).ToHtmlString() + "</div>");
               ViewContext.Writer.Write("</div>");

               ViewContext.Writer.Write("<div class='col-sm-3 col-md-3 col-lg-3 reason-code no-padding'>");
               ViewContext.Writer.Write("<div class='form-row-group lati-longi'>" + Html.EditorFor(m => m.Record.CgoReasonCodeOSD).ToHtmlString() + "</div>");
               ViewContext.Writer.Write("<div class='form-row-group lati-longi'>" + Html.EditorFor(m => m.Record.CgoReasonCodeHold).ToHtmlString() + "</div>");
               ViewContext.Writer.Write("</div>");
               ViewContext.Writer.Write("<div class='col-sm-3 col-md-3 col-lg-3 reason-code no-padding'>");
               ViewContext.Writer.Write("<div class='form-row-group lati-longi'>" + Html.EditorFor(m => m.Record.CgoLatitude).ToHtmlString() + "</div>");
               ViewContext.Writer.Write("<div class='form-row-group lati-longi'>" + Html.EditorFor(m => m.Record.CgoLongitude).ToHtmlString() + "</div>");
               ViewContext.Writer.Write("</div>");
           });
       }).GetHtml()
        </div>

        <div class="col-sm-2 col-md-2 col-lg-2 job-cargostatus-panel no-padding-right">
            @Html.DevExpress().RoundPanel(settings =>
{
    settings.Name = "pnlJobCargoStatus";
    settings.Width = Unit.Percentage(100);
    settings.AllowCollapsingByHeaderClick = true;
    settings.ShowCollapseButton = true;
    settings.HeaderText = "Job Cargo Status";
    settings.Collapsed = false;
    settings.ControlStyle.CssClass = "form-layout";
    settings.SetContent(() =>
    {

        ViewContext.Writer.Write("<div class='form-row-group col-fixed-15'>" + Html.EditorFor(m => m.Record.CgoSeverityCode).ToHtmlString() + "</div>");

        ViewContext.Writer.Write("<div class='form-row-group col-fixed-15 field_height_3'>" + Html.EditorFor(m => m.Record.StatusId, new { StatusId = Model.Record.StatusId }).ToHtmlString() + "</div>");
    });
}).GetHtml()
        </div>


        @Html.Partial(MvcConstants.EnteredChangedPartial, new M4PL.Web.Models.FormResult<BaseModel> { Record = Model.Record, ColumnSettings = Model.ColumnSettings, FormId = Model.FormId, IsPopUp = Model.IsPopUp  })

    </div>
    if (!Model.IsPopUp)
    {
        <div class="form-btns-block">
            <div class="half-width">
                @Html.DevExpress().Button(settings =>
           {
               settings.Name = "btn" + Model.CallBackRoute.Controller + "Save";//The name standard dependent on Ribbon's 'Save' functionality.Please make changes BaseController 'Ribbon' region 'Save' action
               settings.EnableTheming = true;
               settings.Text = (Model.Record.Id > 0) ? Model.Operations[OperationTypeEnum.Update].LangName : Model.Operations[OperationTypeEnum.Save].LangName;
               settings.AllowFocus = false;
               settings.ControlStyle.CssClass = "form-btn pull-right";
               settings.Enabled = !(Model.Permission < Permission.AddEdit); settings.ClientSideEvents.Click = Model.SubmitClick;
               settings.Images.Image.Url = WebExtension.ConvertByteToString(Model.Operations[(Model.Record.Id > 0) ? OperationTypeEnum.Edit : OperationTypeEnum.New].Icon);
           }).GetHtml()
            </div>
            <div class="half-width">
                @Html.DevExpress().Button(settings =>
       {
           settings.Name = "btn" + Model.CallBackRoute.Controller + "Cancel";
           settings.EnableTheming = true;
           settings.Text = Model.Operations[OperationTypeEnum.Cancel].LangName;
           settings.AllowFocus = false;
           settings.ControlStyle.CssClass = "form-btn pull-left";
           settings.ClientSideEvents.Click = Model.CancelClick; settings.Images.Image.Url = WebExtension.ConvertByteToString(Model.Operations[OperationTypeEnum.Cancel].Icon);
       }).GetHtml()
            </div>
        </div>
    }
}
