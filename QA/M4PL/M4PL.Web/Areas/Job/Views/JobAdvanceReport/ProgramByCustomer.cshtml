@using M4PL.Web.Providers
@using System.Web.UI.WebControls
@model M4PL.Web.Models.ReportResult<M4PL.APIClient.ViewModels.Job.JobReportView>


@Html.DevExpress().CallbackPanel(setings =>
{
    setings.Name = "ProgramByCustomerCbPanel";
    setings.CallbackRouteValues = new { Controller = Model.CallBackRoute.Controller, Action = "ProgramByCustomer", Area = Model.CallBackRoute.Area, model = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Record) };
    setings.ControlStyle.CssClass = "custom-cb-panel-container";
    setings.SetContent(() =>
    {
        @Html.DevExpress().Label(
                       settings =>
                       {
                           settings.Name = "lblProgram";
                           settings.Text = "Program";
                           settings.ControlStyle.CssClass = "job-advance-custom-lbl control-label inline-element";
                       }).GetHtml();

       Html.DevExpress().DropDownEdit(settings =>
        {
            settings.Name = "ProgramByCustomerCbPanelforClosed";
            //settings.Width = 285;
            //settings.Properties.DropDownWindowStyle.BackColor = Color.FromArgb(0xEDEDED);

            settings.SetDropDownWindowTemplateContent(c =>
            {
                Html.DevExpress().ListBox(listBoxSettings =>
                {
                    listBoxSettings.Name = "checkListBoxProgramByCustomerCbPanelforClosed";
                    listBoxSettings.ControlStyle.Border.BorderWidth = 0;
                    listBoxSettings.ControlStyle.BorderBottom.BorderWidth = 1;
                    //listBoxSettings.ControlStyle.BorderBottom.BorderColor = Color.FromArgb(0xDCDCDC);
                    listBoxSettings.Height = Unit.Pixel(200);
                    listBoxSettings.Width = Unit.Percentage(100);

                    listBoxSettings.Properties.EnableSelectAll = true;
                    listBoxSettings.Properties.FilteringSettings.ShowSearchUI = true;
                    listBoxSettings.Properties.SelectionMode = ListEditSelectionMode.CheckColumn;

                    if(ViewData["Programs"] != null)
                    {
                        foreach (var item in (IList<M4PL.Entities.Job.JobAdvanceReportFilter>)ViewData["Programs"])
                        {
                            listBoxSettings.Properties.Items.Add(item.ProgramTittle,item.Id);
                        }
                    }

                    listBoxSettings.Properties.ClientSideEvents.SelectedIndexChanged = "M4PLCommon.DropDownMultiSelect.UpdateTextProgram";
                    listBoxSettings.Properties.ClientSideEvents.Init = "M4PLCommon.DropDownMultiSelect.UpdateTextProgram";
                }).Render();

            });
            settings.Properties.AnimationType = AnimationType.None;
            settings.Properties.ClientSideEvents.TextChanged = "M4PLCommon.DropDownMultiSelect.SynchronizeListBoxValuesProgram";
            settings.Properties.ClientSideEvents.DropDown = "M4PLCommon.DropDownMultiSelect.SynchronizeListBoxValuesProgram";
        }).Render();


    });

}).GetHtml()
