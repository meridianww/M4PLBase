@using M4PL.Web.Providers
@model M4PL.Web.Models.ReportResult<M4PL.APIClient.ViewModels.Job.JobReportView>


@Html.DevExpress().CallbackPanel(setings =>
{
    setings.Name = "DateTypeByCustomerProgramCbPanel";
    setings.ControlStyle.CssClass = "custom-cb-panel-container";
    setings.CallbackRouteValues = new { Controller = Model.CallBackRoute.Controller, Action = "DateTypeByCustomer", Area = Model.CallBackRoute.Area, model = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Record) };
    //setings.ClientSideEvents.Init = "M4PLCommon.AdvancedReport.DefaultDateTypeCustomer(s,e);";
    setings.SetContent(() =>
    {
        @Html.DevExpress().Label(
                       settings =>
                       {
                           settings.Name = "lblDateReferences";
                           settings.Text = "Date References";
                           settings.ControlStyle.CssClass = "job-advance-custom-lbl control-label inline-element";
                       }).GetHtml();

        @Html.DevExpress().GridLookup(settings =>
        {

            settings.Name = "DateTypeByCustomerProgramCbPanelClosed";
            settings.KeyFieldName = "DateTypeName";

            settings.GridViewProperties.CallbackRouteValues = new { Controller = Model.CallBackRoute.Controller, Action = "DateTypeByCustomer", Area = Model.CallBackRoute.Area, model = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Record) };
            settings.Properties.SelectionMode = DevExpress.Web.GridLookupSelectionMode.Single;
            settings.Properties.TextFormatString = "{0}";
            settings.CommandColumn.ShowSelectCheckbox = true;
            settings.CommandColumn.SelectAllCheckboxMode = GridViewSelectAllCheckBoxMode.AllPages;

            settings.GridViewProperties.SettingsPager.Visible = true;
            settings.GridViewProperties.Settings.ShowGroupPanel = false;
            settings.GridViewProperties.Settings.ShowFilterRow = false;
            settings.Properties.ClientSideEvents.Init = "M4PLCommon.AdvancedReport.DefaultDateTypeCustomer()";
            settings.CommandColumn.Visible = true;
            settings.Columns.Add("DateTypeName");

            settings.PreRender = (sender, e) =>
            {
                MVCxGridView gridView = (sender as MVCxGridLookup).GridView;
                List<string> keys = new List<string>();
                for (int i = 0; i < gridView.VisibleRowCount; i++)
                    keys.Add((string)gridView.GetRowValues(i, Model.Record.DateTypeName));
                (sender as MVCxGridLookup).JSProperties["cpAllKeys"] = keys;

                MVCxGridLookup lookupAgency = sender as MVCxGridLookup;
                for (int i = 0; i < lookupAgency.GridView.VisibleRowCount; i++)
                {
                    lookupAgency.GridView.Selection.SelectRow(i);
                }
            };
            settings.GridViewProperties.Settings.ShowStatusBar = GridViewStatusBarMode.Visible;



        }).BindList(ViewData["DateTypes"]).Bind(Model.Record.DateTypeName).GetHtml();
    });

}).GetHtml()



