@*Copyright (2019) Meridian Worldwide Transportation Group
    //All Rights Reserved Worldwide
    //====================================================================================================================================================
    //Program Title:                                Meridian 4th Party Logistics(M4PL)
    //Programmer:                                   Prashant Aggarwal
    //Date Programmed:                              28/08/2019
    //Program Name:                                 JobBillableSheetView
    //Purpose:                                      Provides view for Job's JobBillableSheetView
    //====================================================================================================================================================*@

@using M4PL.Entities
@using System.Web.UI.WebControls
@using M4PL.Web.Providers
@model  M4PL.Web.Models.FormResult<M4PL.APIClient.ViewModels.Job.JobBillableSheetView>
@{
    ViewBag.Title = Model.PageName;
    Model.Record.ArbRecordId = Model.Record.Id == 0 ? new Random().Next(-1000, 0) : Model.Record.Id;
}

@if (!Model.IsPopUp && (Model.Record.Id > 0))
{
    @Html.Partial(MvcConstants.NavigationPanePartial, Model.NavigationPane);
}

@using (Html.BeginForm(MvcConstants.ActionAddOrEdit, Model.CallBackRoute.Controller, FormMethod.Post, new { id = Model.FormId, @class = "col-lg-12 col-md-12" }))
{
    @Html.DevExpress().RoundPanel(settings =>
{
    settings.Name = "pnlJobRefBillableSheet";
    settings.Width = Unit.Percentage(100);
    settings.AllowCollapsingByHeaderClick = true;
    settings.ShowCollapseButton = true;
    settings.HeaderText = "Price Code";
    settings.Collapsed = false;
    settings.ControlStyle.CssClass = "form-layout";
    settings.SetContent(() =>
    {
        ViewContext.Writer.Write(Html.Hidden("ArbRecordId", Model.Record.ArbRecordId).ToHtmlString());
        ViewContext.Writer.Write("<div class='form-row-group col-fixed-13'>" + Html.EditorFor(m => m.Record.Id).ToHtmlString() + "</div>");
        ViewContext.Writer.Write("<div class='form-row-group col-fixed-13'>" + Html.EditorFor(m => m.Record.JobID).ToHtmlString() + "</div>");
        ViewContext.Writer.Write("<div class='form-row-group col-fixed-5 iteminput-hide'>" + Html.EditorFor(m => m.Record.PrcLineItem).ToHtmlString() + "</div>");
        ViewContext.Writer.Write("<div class='form-row-group col-fixed-10'>" + Html.EditorFor(m => m.Record.PrcChargeID).ToHtmlString() + "</div>");
        ViewContext.Writer.Write("<div class='form-row-group col-fixed-25'>" + Html.EditorFor(m => m.Record.PrcChargeCode).ToHtmlString() + "</div>");
        ViewContext.Writer.Write("<div class='form-row-group col-fixed-50'>" + Html.EditorFor(m => m.Record.PrcTitle).ToHtmlString() + "</div>");
        //ViewContext.Writer.Write("<div class='form-row-group col-fixed-13'>" + Html.EditorFor(m => m.Record.PrcSurchargeOrder).ToHtmlString() + "</div>");
        //ViewContext.Writer.Write("<div class='form-row-group col-fixed-20'>" + Html.EditorFor(m => m.Record.PrcSurchargePercent).ToHtmlString() + "</div>");
        ViewContext.Writer.Write("<div class='form-row-group col-fixed-20'>" + Html.EditorFor(m => m.Record.ChargeTypeId, new { ChargeTypeId = Model.Record.ChargeTypeId }).ToHtmlString() + "</div>");
        //ViewContext.Writer.Write("<div class='form-row-group col-fixed-10'>" + Html.EditorFor(m => m.Record.PrcNumberUsed).ToHtmlString() + "</div>");
        //ViewContext.Writer.Write("<div class='form-row-group col-fixed-20'>" + Html.EditorFor(m => m.Record.PrcDuration).ToHtmlString() + "</div>");
        ViewContext.Writer.Write("<div class='form-row-group col-fixed-20'>" + Html.EditorFor(m => m.Record.PrcQuantity).ToHtmlString() + "</div>");
        ViewContext.Writer.Write("<div class='form-row-group col-fixed-13'>" + Html.EditorFor(m => m.Record.PrcUnitId, new { CostUnitId = Model.Record.PrcUnitId }).ToHtmlString() + "</div>");
        ViewContext.Writer.Write("<div class='form-row-group col-fixed-20'>" + Html.EditorFor(m => m.Record.PrcRate).ToHtmlString() + "</div>");
        //ViewContext.Writer.Write("<div class='form-row-group col-fixed-20'>" + Html.EditorFor(m => m.Record.PrcAmount).ToHtmlString() + "</div>");
        //ViewContext.Writer.Write("<div class='form-row-group col-fixed-13'>" + Html.EditorFor(m => m.Record.PrcMarkupPercent).ToHtmlString() + "</div>");
        ViewContext.Writer.Write("<div class='form-row-group col-fixed-13'>" + Html.EditorFor(m => m.Record.StatusId, new { StatusId = Model.Record.StatusId }).ToHtmlString() + "</div>");

    });
}).GetHtml()
    @Html.DevExpress().RoundPanel(settings =>
  {
      settings.Name = "pnlPcrComment";
      settings.Width = Unit.Percentage(100);
      settings.AllowCollapsingByHeaderClick = true;
      settings.ShowCollapseButton = true;
      settings.HeaderText = "Description";
      settings.Collapsed = true;
      settings.ControlStyle.CssClass = "form-layout";
      settings.SetContent(() =>
      {
          Html.RenderAction(MvcConstants.ActionRichEditDescription, Model.CallBackRoute.Controller, new { Area = Model.CallBackRoute.Area, docId = new M4PL.Entities.Support.Filter { FieldName = "ArbRecordId", Value = Model.Record.ArbRecordId.ToString() }, viewRecord = Model.Record, isPopup = Model.IsPopUp });
      });
  }).GetHtml()
    @Html.Partial(MvcConstants.EnteredChangedPartial, new M4PL.Web.Models.FormResult<BaseModel> { Record = Model.Record, ColumnSettings = Model.ColumnSettings, FormId = Model.FormId, IsPopUp = Model.IsPopUp })
    if (!Model.IsPopUp)
    {
        <div class="form-btns-block">
            <div class="half-width">
                @Html.DevExpress().Button(settings =>
           {
               settings.Name = "btn" + Model.CallBackRoute.Controller + "Save";//The name standard dependent on Ribbon's 'Save' functionality.Please make changes BaseController 'Ribbon' region 'Save' action
               settings.EnableTheming = true;
               settings.Text = (Model.Record.Id > 0) ? Model.Operations[OperationTypeEnum.Update].LangName : Model.Operations[OperationTypeEnum.Save].LangName;
               settings.AllowFocus = false;
               settings.ControlStyle.CssClass = "form-btn pull-right";
               settings.Enabled = !(Model.Permission < Permission.AddEdit);
               settings.ClientSideEvents.Click = Model.SubmitClick;
               settings.Images.Image.Url = WebExtension.ConvertByteToString(Model.Operations[(Model.Record.Id > 0) ? OperationTypeEnum.Edit : OperationTypeEnum.New].Icon);
           }).GetHtml()
            </div>
            <div class="half-width">
                @Html.DevExpress().Button(settings =>
           {
               settings.Name = "btn" + Model.CallBackRoute.Controller + "Cancel";
               settings.EnableTheming = true;
               settings.Text = Model.Operations[OperationTypeEnum.Cancel].LangName;
               settings.AllowFocus = false;
               settings.ControlStyle.CssClass = "form-btn pull-left";
               settings.ClientSideEvents.Click = Model.CancelClick; settings.Images.Image.Url = WebExtension.ConvertByteToString(Model.Operations[OperationTypeEnum.Cancel].Icon);
           }).GetHtml()
            </div>
        </div>
    }
}
