@*Copyright (2016) Meridian Worldwide Transportation Group
    //All Rights Reserved Worldwide
    //====================================================================================================================================================
    //Program Title:                                Meridian 4th Party Logistics(M4PL)
    //Programmer:                                   Akhil
    //Date Programmed:                              13/10/2017
    //Program Name:                                 CustomerFormView
    //Purpose:                                      Provides view for Customer page
    //====================================================================================================================================================*@

@using M4PL.Entities
@using System.Web.UI.WebControls
@using M4PL.Web.Providers
@model  M4PL.Web.Models.FormResult<M4PL.APIClient.ViewModels.Customer.CustomerView>
@{
    ViewBag.Title = Model.PageName;
    Model.Record.CustOrgId = Model.SessionProvider.ActiveUser.OrganizationId;
    Model.Record.CustItemNumber = Model.Record.Id == 0 ? Model.Record.ItemNumber : Model.Record.CustItemNumber;
    var tabRoute = new M4PL.Entities.Support.MvcRoute(Model.CallBackRoute, MvcConstants.ActionTabViewCallBack);
    tabRoute.SetParent(EntitiesAlias.Customer, Model.Record.Id, Model.IsPopUp);
}

@Html.Partial(MvcConstants.NavigationPanePartial, Model.NavigationPane)

@using (Html.BeginForm(MvcConstants.ActionAddOrEdit, Model.CallBackRoute.Controller, FormMethod.Post, new { id = Model.FormId }))
{
    @Html.DevExpress().RoundPanel(settings =>
{
    settings.Name = "pnlCustDetail";
    settings.Width = Unit.Percentage(100);
    settings.AllowCollapsingByHeaderClick = true;
    settings.ShowCollapseButton = true;
    settings.HeaderText = "Detail";
    settings.Collapsed = false;
    settings.ControlStyle.CssClass = "form-layout";
    settings.SetContent(() =>
    {

        ViewContext.Writer.Write("<div class='col-md-12 col-lg-10 first-row-col-1 no-padding'>");
        ViewContext.Writer.Write("<div class='form-row-group col-fixed-10 iteminput-hide'>");
        ViewContext.Writer.Write(Html.EditorFor(m => m.Record.Id).ToHtmlString());
        ViewContext.Writer.Write("</div>");
        ViewContext.Writer.Write("<div class='form-row-group col-fixed-12'>");
        ViewContext.Writer.Write(Html.EditorFor(m => m.Record.CustERPID).ToHtmlString());
        ViewContext.Writer.Write("</div>");
        ViewContext.Writer.Write("<div class='form-row-group col-fixed-12'>");
        ViewContext.Writer.Write(Html.EditorFor(m => m.Record.CustOrgId, MvcConstants.EditorReadOnlyTextBoxTemplate, new { CurrentValue = Model.Record.RoleCode, CurrentName = "_CurrentOrg" }).ToHtmlString());
        ViewContext.Writer.Write("</div>");
        ViewContext.Writer.Write("<div class='col-md-12 col-lg-8 row-col-2   no-padding'>");
        ViewContext.Writer.Write("<div class='form-row-group col-fixed-5 iteminput-hide'>");
        ViewContext.Writer.Write(Html.EditorFor(m => m.Record.CustItemNumber).ToHtmlString());
        ViewContext.Writer.Write("</div>");
        ViewContext.Writer.Write("<div class='form-row-group col-fixed-20'>");
        ViewContext.Writer.Write(Html.EditorFor(m => m.Record.CustCode).ToHtmlString());
        ViewContext.Writer.Write("</div>");
        ViewContext.Writer.Write("<div class='form-row-group col-fixed-50'>");
        ViewContext.Writer.Write(Html.EditorFor(m => m.Record.CustTitle).ToHtmlString());
        ViewContext.Writer.Write("</div>");
        ViewContext.Writer.Write("</div>");
        ViewContext.Writer.Write("<div class='form-row-group vendor-type'>");
        ViewContext.Writer.Write(Html.EditorFor(m => m.Record.CustTypeId, new { CustTypeId = Model.Record.CustTypeId, IsAddable = (Model.Record.Id == 0) }).ToHtmlString());
        ViewContext.Writer.Write("</div>");
        ViewContext.Writer.Write("<div class='form-row-group vendor-webpage'>");
        ViewContext.Writer.Write(Html.EditorFor(m => m.Record.CustWebPage).ToHtmlString());
        ViewContext.Writer.Write("</div>");
        ViewContext.Writer.Write("<div class='form-row-group col-fixed-10'>");
        ViewContext.Writer.Write(Html.EditorFor(m => m.Record.StatusId, new { StatusId = Model.Record.StatusId }).ToHtmlString());
        ViewContext.Writer.Write("</div>");

        ViewContext.Writer.Write("</div>");

        ViewContext.Writer.Write("<div class='col-md-12 col-lg-1 logo-upload no-padding'>");
        ViewContext.Writer.Write(string.Format(CssConstants.DivFormRowCls, string.Concat(CssConstants.ColFixed5, " ", CssConstants.AutoHeightWidth), Html.EditorFor(m => m.Record.CustLogo, "FileUpload", new { ImageHeight = 50, ImageWidth = 250 }).ToHtmlString()));
        ViewContext.Writer.Write("</div>");

        ViewContext.Writer.Write("</div>");

    });
}).GetHtml()

    <div class="addressform">
        @Html.Action(MvcConstants.ActionTabViewCallBack, Model.CallBackRoute.Controller, new { Area = Model.CallBackRoute.Area, strRoute = Newtonsoft.Json.JsonConvert.SerializeObject(tabRoute) })
    </div>
    if (!Model.IsPopUp)
    {
        <div class="form-btns-block">
            <div class="col-md-6 no-padding">
                @Html.DevExpress().Button(settings =>
           {
               settings.Name = "btn" + Model.CallBackRoute.Controller + "Save";//The name standard dependent on Ribbon's 'Save' functionality.Please make changes BaseController 'Ribbon' region 'Save' action
               settings.EnableTheming = true;
               settings.Text = (Model.Record.Id > 0) ? Model.Operations[OperationTypeEnum.Update].LangName : Model.Operations[OperationTypeEnum.Save].LangName;
               settings.AllowFocus = false;
               settings.ControlStyle.CssClass = "form-btn pull-right";
               settings.Enabled = !(Model.Permission < Permission.AddEdit);
               settings.ClientSideEvents.Click = Model.SubmitClick;
               settings.Images.Image.Url = WebExtension.ConvertByteToString(Model.Operations[(Model.Record.Id > 0) ? OperationTypeEnum.Edit : OperationTypeEnum.New].Icon);
           }).GetHtml()
            </div>
            <div class="col-md-6 no-padding">
                @Html.DevExpress().Button(settings =>
       {
           settings.Name = "btn" + Model.CallBackRoute.Controller + "Cancel";
           settings.EnableTheming = true;
           settings.Text = Model.Operations[OperationTypeEnum.Cancel].LangName;
           settings.AllowFocus = false;
           settings.ControlStyle.CssClass = "form-btn";
           settings.Enabled = !(Model.Permission < Permission.EditAll);
           settings.ClientSideEvents.Click = Model.CancelClick; settings.Images.Image.Url = WebExtension.ConvertByteToString(Model.Operations[OperationTypeEnum.Cancel].Icon);
       }).GetHtml()
            </div>
        </div>
    }
}