@*Copyright (2016) Meridian Worldwide Transportation Group

    //====================================================================================================================================================
    //Program Title:                                Meridian 4th Party Logistics(M4PL)
    //Programmer:                                   KAMAL
    //Date Programmed:                              17/12/2020
    //Program Name:                                 CustNAVConfigurationView
    //Purpose:                                      Provides view for Customer's NAV CONFIGURATION
    //====================================================================================================================================================*@

@using M4PL.Entities
@using M4PL.Entities.Support;
@using System.Web.UI.WebControls
@using M4PL.Web.Providers
@model  M4PL.Web.Models.FormResult<M4PL.APIClient.ViewModels.Customer.CustNAVConfigurationView>
@{
    ViewBag.Title = Model.PageName;
}

@*@if (!Model.IsPopUp && (Model.Record.Id > 0))
{<div class="col-md-12 col-lg-12">
        @Html.Partial(MvcConstants.NavigationPanePartial, Model.NavigationPane)
    </div>
}*@

@using (Html.BeginForm(MvcConstants.ActionAddOrEdit, Model.CallBackRoute.Controller, FormMethod.Post, new { id = Model.FormId, @class = "col-lg-12 col-md-12" }))
{
    @Html.DevExpress().RoundPanel(settings =>
      {
            settings.Name = "pnlCustNavCOnfiguration";
            settings.Width = Unit.Percentage(100);
            settings.AllowCollapsingByHeaderClick = true;
            settings.ShowCollapseButton = true;
            settings.HeaderText = "Detail";
            settings.Collapsed = false;
            settings.ControlStyle.CssClass = "form-layout";
            settings.SetContent(() =>
            {
                ViewContext.Writer.Write(Html.HiddenFor(m => m.Record.ParentId, new { Name = "CustomerId" }).ToHtmlString());
                ViewContext.Writer.Write(Html.HiddenFor(m => m.Record.Id, new { Name = "Id" }).ToHtmlString());
                ViewContext.Writer.Write("<div class='cust-dcgrouping col-md-12 col-lg-10 no-padding'>");
                ViewContext.Writer.Write("<div class='form-row-group col-fixed-10'>" + Html.EditorFor(m => m.Record.NAVConfigurationId).ToHtmlString() + "</div>");        
                ViewContext.Writer.Write("<div class='form-row-group col-fixed-20'>" + Html.EditorFor(m => m.Record.ServiceUrl).ToHtmlString() + "</div>");
                ViewContext.Writer.Write("<div class='form-row-group col-fixed-20'>" + Html.EditorFor(m => m.Record.ServiceUserName).ToHtmlString() + "</div>");
                ViewContext.Writer.Write("<div class='form-row-group col-fixed-20'>" + Html.EditorFor(m => m.Record.ServicePassword).ToHtmlString() + "</div>");
                ViewContext.Writer.Write("</div>");
                ViewContext.Writer.Write("<div class='form-row-group col-fixed-15'>" + Html.EditorFor(m => m.Record.StatusId, new { StatusId = Model.Record.StatusId }).ToHtmlString() + "</div>");
                ViewContext.Writer.Write("</div>");
            });
        }).GetHtml()

        @Html.Partial(MvcConstants.EnteredChangedPartial, new M4PL.Web.Models.FormResult<BaseModel>{ Record = Model.Record, ColumnSettings = Model.ColumnSettings, FormId = Model.FormId, IsPopUp = Model.IsPopUp })
        if (!Model.IsPopUp)
        {
            <div class="form-btns-block">
                <div class="half-width">
                    @Html.DevExpress().Button(settings =>
                       {
                           settings.Name = "btn" + Model.CallBackRoute.Controller + "Save";//The name standard dependent on Ribbon's 'Save' functionality.Please make changes BaseController 'Ribbon' region 'Save' action
                           settings.EnableTheming = true;
                           settings.Text = (Model.Record.Id > 0) ? Model.Operations[OperationTypeEnum.Update].LangName : Model.Operations[OperationTypeEnum.Save].LangName;
                           settings.AllowFocus = false;
                           settings.ControlStyle.CssClass = "form-btn pull-right";
                           settings.Enabled = (Model.Record.Id > 0) ? !(Model.Permission < Permission.EditAll) : !(Model.Permission < Permission.AddEdit);
                           settings.ClientSideEvents.Click = Model.SubmitClick;
                           settings.Images.Image.Url = WebExtension.ConvertByteToString(Model.Operations[(Model.Record.Id > 0) ? OperationTypeEnum.Edit : OperationTypeEnum.New].Icon);
                       }).GetHtml()
                </div>
                <div class="half-width">
                    @Html.DevExpress().Button(settings =>
                       {
                           settings.Name = "btn" + Model.CallBackRoute.Controller + "Cancel";
                           settings.EnableTheming = true;
                           settings.Text = Model.Operations[OperationTypeEnum.Cancel].LangName;
                           settings.AllowFocus = false;
                           settings.ControlStyle.CssClass = "form-btn pull-left";
                           settings.ClientSideEvents.Click = Model.CancelClick; settings.Images.Image.Url = WebExtension.ConvertByteToString(Model.Operations[OperationTypeEnum.Cancel].Icon);
                       }).GetHtml()
                </div>
            </div>
        }
 }
@Html.Action("RecordSubPopupControl", "Popup", new { Area = string.Empty, strRoute = string.Empty, strByteArray = string.Empty })
