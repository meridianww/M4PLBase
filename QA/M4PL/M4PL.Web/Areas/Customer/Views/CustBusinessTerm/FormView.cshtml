@*Copyright (2016) Meridian Worldwide Transportation Group
    //All Rights Reserved Worldwide
    //====================================================================================================================================================
    //Program Title:                                Meridian 4th Party Logistics(M4PL)
    //Programmer:                                   Akhil
    //Date Programmed:                              13/10/2017
    //Program Name:                                 CustBusinessForm
    //Purpose:                                      Provides view for Customer's Business terms
    //====================================================================================================================================================*@

@using M4PL.Entities
@using M4PL.Utilities
@using System.Web.UI.WebControls
@model  M4PL.Web.Models.FormResult<M4PL.APIClient.ViewModels.Customer.CustBusinessTermView>
@{
    ViewBag.Title = Model.PageName;
    var attachmentRoute = new M4PL.Entities.Support.MvcRoute(EntitiesAlias.Attachment, MvcConstants.ActionDataView, EntitiesAlias.Attachment.ToString());
    attachmentRoute.OwnerCbPanel = Model.CallBackRoute.OwnerCbPanel;
    attachmentRoute.SetParent(EntitiesAlias.CustBusinessTerm, Model.Record.Id);
    Model.Record.CbtItemNumber = Model.Record.Id == 0 ? Model.Record.ItemNumber : Model.Record.CbtItemNumber;
    var currentThresholdPercentage = Model.SessionProvider.UserSettings.Settings.GetSystemSettingValue(WebApplicationConstants.SysThresholdPercentage).ToInt();
    var hiThresholdControlName = (Model.IsPopUp) ? "CbtHiThreshold" + WebApplicationConstants.PopupSuffix : "CbtHiThreshold";
    var lowThresholdControlName = (Model.IsPopUp) ? "CbtLoThreshold" + WebApplicationConstants.PopupSuffix : "CbtLoThreshold";
    Model.Record.ArbRecordId = Model.Record.Id == 0 ? new Random().Next(-1000, 0) : Model.Record.Id;
}

@if (!Model.IsPopUp && (Model.Record.Id > 0))
{   <div class="col-lg-12 col-md-12">
        @Html.Partial(MvcConstants.NavigationPanePartial, Model.NavigationPane)
    </div>
}

@using (Html.BeginForm(MvcConstants.ActionAddOrEdit, Model.CallBackRoute.Controller, FormMethod.Post, new { id = Model.FormId, @class = "col-lg-12 col-md-12" }))
{
    @Html.DevExpress().RoundPanel(settings =>
{
    settings.Name = "pnlBusinessTerm";
    settings.Width = Unit.Percentage(100);
    settings.AllowCollapsingByHeaderClick = true;
    settings.ShowCollapseButton = true;
    settings.HeaderText = "Detail";
    settings.Collapsed = false;
    settings.ControlStyle.CssClass = "form-layout";
    settings.SetContent(() =>
    {
        ViewContext.Writer.Write(Html.HiddenFor(m => m.Record.ArbRecordId, new { Name = "ArbRecordId" }).ToHtmlString());
        ViewContext.Writer.Write(Html.HiddenFor(m => m.Record.ParentId, new { Name = "ParentId" }).ToHtmlString());

        ViewContext.Writer.Write("<div class='row no-margin'>");
        ViewContext.Writer.Write("<div class='full-width'>");
        ViewContext.Writer.Write("<div class='form-row-group col-fixed-13'>" + Html.EditorFor(m => m.Record.Id).ToHtmlString() + "</div>");
        ViewContext.Writer.Write("<div class='form-row-group col-fixed-5 iteminput-hide'>" + Html.EditorFor(m => m.Record.CbtItemNumber).ToHtmlString() + "</div>");
        ViewContext.Writer.Write("<div class='form-row-group col-fixed-20 label-width-x-small'>" + Html.EditorFor(m => m.Record.CbtCode).ToHtmlString() + "</div>");
        ViewContext.Writer.Write("<div class='form-row-group col-fixed-50'>" + Html.EditorFor(m => m.Record.CbtTitle).ToHtmlString() + "</div>");
        ViewContext.Writer.Write("</div>");
        ViewContext.Writer.Write("</div>");
        ViewContext.Writer.Write("<div class='row no-margin'>");
        ViewContext.Writer.Write("<div class='full-width'>");
        ViewContext.Writer.Write("<div class='col-width-246'>");
        ViewContext.Writer.Write("<div class='form-row-group col-fixed-13'>" + Html.EditorFor(m => m.Record.BusinessTermTypeId, new { BusinessTermTypeId = Model.Record.BusinessTermTypeId }).ToHtmlString() + "</div>");
        ViewContext.Writer.Write("<div class='form-row-group col-fixed-13'>" + Html.EditorFor(m => m.Record.CbtActiveDate).ToHtmlString() + "</div>");
        ViewContext.Writer.Write("</div>");
        ViewContext.Writer.Write("<div class='col-width-635'>");
        ViewContext.Writer.Write("<div class='form-row-group col-fixed-18 iteminput-hide'>" + Html.EditorFor(m => m.Record.CbtValue, new { OnChangeEvent = "DevExCtrl.TextBox.OnCustBTThresholdValueChanged(s, e, '" + hiThresholdControlName + "', '" + lowThresholdControlName + "', " + currentThresholdPercentage + ");" }).ToHtmlString() + "</div>");
        ViewContext.Writer.Write("<div class='form-row-group col-fixed-18 iteminput-hide'>" + Html.EditorFor(m => m.Record.CbtHiThreshold).ToHtmlString() + "</div>");
        ViewContext.Writer.Write("<div class='form-row-group col-fixed-18 iteminput-hide'>" + Html.EditorFor(m => m.Record.CbtLoThreshold).ToHtmlString() + "</div>");
        ViewContext.Writer.Write("</div>");
        ViewContext.Writer.Write("<div class='col-width-246'>");
        ViewContext.Writer.Write("<div class='form-row-group col-fixed-13'>" + Html.EditorFor(m => m.Record.StatusId, new { StatusId = Model.Record.StatusId }).ToHtmlString() + "</div>");

        ViewContext.Writer.Write("</div>");
        ViewContext.Writer.Write("</div>");
        ViewContext.Writer.Write("</div>");
    });
}).GetHtml()

    @Html.DevExpress().RoundPanel(settings =>
    {
        settings.Name = "pnlCbtDescription";
        settings.Width = Unit.Percentage(100);
        settings.AllowCollapsingByHeaderClick = true;
        settings.ShowCollapseButton = true;
        settings.HeaderText = "Description";
        settings.Collapsed = true;
        settings.ControlStyle.CssClass = "form-layout";
        settings.SetContent(() =>
        {
            Html.RenderAction(MvcConstants.ActionRichEditDescription, Model.CallBackRoute.Controller, new { Area = Model.CallBackRoute.Area, docId = new M4PL.Entities.Support.Filter { FieldName = "ArbRecordId", Value = Model.Record.ArbRecordId.ToString() } });
        });
    }).GetHtml()

    @Html.Partial(MvcConstants.ViewAttachmentDataViewPartial, attachmentRoute, new ViewDataDictionary { { "Count", Model.Record.CbtAttachment } })

    @Html.Partial(MvcConstants.EnteredChangedPartial, new M4PL.Web.Models.FormResult<BaseModel> { Record = Model.Record, ColumnSettings = Model.ColumnSettings, FormId = Model.FormId, IsPopUp = Model.IsPopUp  })
    if (!Model.IsPopUp)
    {
        <div class="form-btns-block">
            <div class="half-width">
                @Html.DevExpress().Button(settings =>
           {
               settings.Name = "btn" + Model.CallBackRoute.Controller + "Save";//The name standard dependent on "Ribbon's 'Save'" & "RecordPopup's navigation Save" functionality.Please make changes in BaseController 'Ribbon' region 'Save' action & NavigationPanelPartial 'SaveRecordPopup' menu item
               settings.EnableTheming = true;
               settings.Text = (Model.Record.Id > 0) ? Model.Operations[OperationTypeEnum.Update].LangName : Model.Operations[OperationTypeEnum.Save].LangName;
               settings.AllowFocus = false;
               settings.ControlStyle.CssClass = "form-btn pull-right";
               settings.Enabled = (Model.Record.Id > 0) ? !(Model.Permission < Permission.EditAll) : !(Model.Permission < Permission.AddEdit);
               settings.ClientSideEvents.Click = Model.SubmitClick;
               settings.Images.Image.Url = WebExtension.ConvertByteToString(Model.Operations[(Model.Record.Id > 0) ? OperationTypeEnum.Edit : OperationTypeEnum.New].Icon);
           }).GetHtml()
            </div>
            <div class="half-width">
                @Html.DevExpress().Button(settings =>
       {
           settings.Name = "btn" + Model.CallBackRoute.Controller + "Cancel";
           settings.EnableTheming = true;
           settings.Text = Model.Operations[OperationTypeEnum.Cancel].LangName;
           settings.AllowFocus = false;
           settings.ControlStyle.CssClass = "form-btn pull-left";
           settings.ClientSideEvents.Click = Model.CancelClick; settings.Images.Image.Url = WebExtension.ConvertByteToString(Model.Operations[OperationTypeEnum.Cancel].Icon);
       }).GetHtml()
            </div>
        </div>
    }
}

<input type="hidden" name="gvVisibleIndex" id="gvVisibleIndex" />
<input type="hidden" name="hf" id="hf" />
@Html.Action("RecordSubPopupControl", "Popup", new { Area = string.Empty, strRoute = string.Empty, strByteArray = string.Empty })