@using System.Web.UI.WebControls;
@model M4PL.Web.Models.FormResult<M4PL.APIClient.ViewModels.Finance.NavRateView>
@{
    ViewBag.Title = "Import Price/Cost Code";
    var uploadCallBackRoute = Model.CallBackRoute;
    Model.IsPopUp = true;
    var recordId = Model.Record.Id;
    string upControlName = "ucDragAndDrop" + Convert.ToString(Model.Record.Id);

    var selectedValue = Model.CallBackRoute.Location != null && Model.CallBackRoute.Location.Count() == 1
        ? Model.CallBackRoute.Location[0] : string.Empty;
    List<string> importItems = new List<string>();
    importItems.Add("Price/Cost Code");
    //importItems.Add("Vendor");
    importItems.Add("Reason Code");
    importItems.Add("Appointment Code");

    ViewData["ImportItems"] = importItems.Distinct().ToList();
}

@using (Html.BeginForm())
{
    Html.DevExpress().CallbackPanel(settings =>
    {
        settings.Name = "pnlImportNavPrice";
        settings.CallbackRouteValues = new { Area = "Finance", Controller = "NavRate", Action = "FormView", strRoute = Newtonsoft.Json.JsonConvert.SerializeObject(Model.CallBackRoute) };
        settings.ClientSideEvents.Init = "M4PLWindow.UploadFileDragDrop.Init";
        settings.ClientSideEvents.EndCallback = "M4PLWindow.UploadFileDragDrop.EndCallback";
        settings.Enabled = false;
        settings.Width = 350;
        settings.Height = 110;
        settings.SetContent(() =>
        {
            ViewContext.Writer.Write("<div class='row'>");
            ViewContext.Writer.Write("<div class='col-sm-5 col-md-5 col-lg-5' style='color:black'>");
            @Html.DevExpress().Label(
                      set =>
                      {
                          set.Name = "lblTemplate";
                          set.Text = "Select Template:";
                          set.ControlStyle.CssClass = "template-custom-lbl control-label inline-element";
                      }).GetHtml();
            ViewContext.Writer.Write("</div>");
            ViewContext.Writer.Write("<div class='col-sm-7 col-md-7 col-lg-7'>");
            if (ViewData["ImportItems"] != null)
            {
                Html.DevExpress().ComboBox(ComboBoxSettings =>
                {
                    ComboBoxSettings.Name = "ImportItemsComboBox";
                    ComboBoxSettings.CallbackRouteValues = new { Area = "Finance", Controller = "NavRate", Action = "FormView", strRoute = Newtonsoft.Json.JsonConvert.SerializeObject(Model.CallBackRoute) };
                    ComboBoxSettings.Width = 180;
                    if (!string.IsNullOrEmpty(selectedValue))
                    {
                        ComboBoxSettings.SelectedIndex = importItems.FindIndex(x => x == selectedValue);
                    }
                    ComboBoxSettings.Properties.CallbackPageSize = 15;
                    ComboBoxSettings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
                    ComboBoxSettings.Properties.ClientSideEvents.SelectedIndexChanged =
                    string.Format("function(s, e) {{M4PLCommon.Common.ProgramImportComboBox(s, e, '{0}'); }}", Newtonsoft.Json.JsonConvert.SerializeObject(Model.CallBackRoute));
                }).BindList((List<string>)ViewData["ImportItems"]).GetHtml();
            }
            ViewContext.Writer.Write("</div>");
            ViewContext.Writer.Write("</div>");
            ViewContext.Writer.Write("<br />");
            if (!string.IsNullOrEmpty(selectedValue))
            {
                ViewContext.Writer.Write("<div id='externalDropZone' class='dropZoneExternal'>");
                ViewContext.Writer.Write("<div id='dragZone'>");
                ViewContext.Writer.Write("<span class='dragZoneText'>CSV to import " + selectedValue + "</span>");
                ViewContext.Writer.Write("</div>");
                ViewContext.Writer.Write("<img id='uploadedImage' src='#' alt='' style='display: none' />");
                ViewContext.Writer.Write("<div id='dropZone' style='display: none'>");
                ViewContext.Writer.Write("<span class='dropZoneText'>CSV to import " + selectedValue + "</span>");
                ViewContext.Writer.Write("</div>");
                ViewContext.Writer.Write("</div>");

                Html.DevExpress().UploadControl(set =>
                {
                    set.CallbackRouteValues = new { Area = "Finance", Controller = "NavRate", Action = "ImportOrderPost", RecordId = recordId };
                    set.Name = "ucDragAndDrop";
                    set.UploadMode = UploadControlUploadMode.Standard;
                    set.AutoStartUpload = true;
                    set.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                    set.DialogTriggerID = "externalDropZone";
                    set.AdvancedModeSettings.EnableDragAndDrop = false;
                    set.AdvancedModeSettings.EnableFileList = false;
                    set.AdvancedModeSettings.EnableMultiSelect = false;
                    set.AdvancedModeSettings.ExternalDropZoneID = "externalDropZone";
                    set.AdvancedModeSettings.DropZoneText = "CSV to import " + selectedValue;
                    set.ValidationSettings.AllowedFileExtensions = new string[] { ".csv" };
                    set.ValidationSettings.ErrorStyle.CssClass = "validationMessage";
                    set.BrowseButton.Text = "Select an CSV to import...";
                    set.Styles.DropZone.CssClass = "uploadControlDropZone";
                    set.ClientSideEvents.FileUploadComplete = "function(s, e, callBackRoute){{ M4PLWindow.UploadFileDragDrop.OnUploadControlFileUploadComplete(s, e, " + Newtonsoft.Json.JsonConvert.SerializeObject(uploadCallBackRoute) + ");}}";
                    set.ShowProgressPanel = true;
                }).GetHtml();
            }

        });
    }).GetHtml();
}