@*Copyright (2016) Meridian Worldwide Transportation Group

    //====================================================================================================================================================
    //Program Title:                                Meridian 4th Party Logistics(M4PL)
    //Programmer:                                   Kirty Anurag
    //Date Programmed:                              13/10/2017
    //Program Name:                                 OrgActRoleFormView
    //Purpose:                                      Provides view for Organization's ActRole
    //====================================================================================================================================================*@

@using M4PL.Entities
@using System.Web.UI.WebControls
@using M4PL.Web.Providers
@using M4PL.Utilities;
@model  M4PL.Web.Models.FormResult<M4PL.APIClient.ViewModels.Organization.OrgRolesRespView>
@{
    ViewBag.Title = Model.PageName;
    var isLoggedInUserRole = ((Model.Record.Id > 0) && ((Model.Record.Id == Model.SessionProvider.ActiveUser.RoleId) && (Model.Record.OrgID == Model.SessionProvider.ActiveUser.OrganizationId))) ? true : false;
    //contactDropDownModel.Disabled = Model.Record.OrgRoleContactID.GetValueOrDefault() == Model.SessionProvider.ActiveUser.ContactId && (Model.Record.OrgID == Model.SessionProvider.ActiveUser.OrganizationId);
    Model.Record.OrgRoleSortOrder = Model.Record.Id == 0 ? Model.Record.ItemNumber : Model.Record.OrgRoleSortOrder;
    var roleCodeDropDownViewModel = Model.Record.Id.GetOrgRefRoleDropDown("OrgRefRoleId", Model.ColumnSettings.FirstOrDefault("OrgRefRoleId").ColAliasName, Model.ColumnSettings.FirstOrDefault("OrgRefRoleId").IsRequired, Model.IsPopUp, (isLoggedInUserRole) ? Permission.NoAccess : Model.Permission);
    Model.Record.ArbRecordId = Model.Record.Id == 0 ? new Random().Next(-1000, 0) : Model.Record.Id;
}

@if (!Model.IsPopUp && (Model.Record.Id > 0))
{<div class="col-lg-12 col-md-12">
        @Html.Partial(MvcConstants.NavigationPanePartial, Model.NavigationPane)
    </div>
}

@using (Html.BeginForm(MvcConstants.ActionAddOrEdit, Model.CallBackRoute.Controller, FormMethod.Post, new { id = Model.FormId, @class = "col-lg-12 col-md-12" }))
{

    @Html.DevExpress().RoundPanel(settings =>
{
    settings.Name = "pnlActRoleDetail";
    settings.Width = Unit.Percentage(100);
    settings.AllowCollapsingByHeaderClick = true;
    settings.ShowCollapseButton = true;
    settings.HeaderText = "Detail";
    settings.Collapsed = false;
    settings.ControlStyle.CssClass = "form-layout";
    settings.SetContent(() =>
    {
        ViewContext.Writer.Write(Html.HiddenFor(m => m.Record.ArbRecordId, new { Name = "ArbRecordId" }).ToHtmlString());
        ViewContext.Writer.Write(Html.HiddenFor(m => m.Record.StatusId, new { Name = "PreviousStatusId" }).ToHtmlString());
        ViewContext.Writer.Write(Html.HiddenFor(m => m.Record.OrgID, new { Name = "OrgID" }).ToHtmlString());

        ViewContext.Writer.Write("<div class='col-lg-11 col-md-11 org-rolseresp no-padding'>");
        ViewContext.Writer.Write("<div class='form-row-group col-fixed-10'>" + Html.EditorFor(m => m.Record.Id).ToHtmlString() + "</div>");
        ViewContext.Writer.Write("<div class='form-row-group col-fixed-5 iteminput-hide label-width-x-small'>" + Html.EditorFor(m => m.Record.OrgRoleSortOrder).ToHtmlString() + "</div>");

        if (isLoggedInUserRole)
        {
            ViewContext.Writer.Write(Html.HiddenFor(m => m.Record.Id, new { Name = "Id" }).ToHtmlString());
            ViewContext.Writer.Write("<div class='form-row-group col-fixed-20'>" + Html.EditorFor(m => m.Record.Id, MvcConstants.EditorReadOnlyTextBoxTemplate, new { CurrentValue = Model.Record.RoleCode, CurrentName = "_CurrentRoleCode" }).ToHtmlString() + "</div>");
        }
        else
            ViewContext.Writer.Write("<div class='form-row-group col-fixed-20'>" + Html.Action(MvcConstants.ActionDropDownViewTemplate, EntitiesAlias.Common.ToString(), new { Area = string.Empty, strDropDownViewModel = Newtonsoft.Json.JsonConvert.SerializeObject(roleCodeDropDownViewModel) }) + "</div>");

        ViewContext.Writer.Write("<div class='form-row-group org-roles-resp'>" + Html.EditorFor(m => m.Record.OrgRoleTitle, new { IsReadOnly = isLoggedInUserRole }).ToHtmlString() + "</div>");

        ViewContext.Writer.Write("<div class='form-row-group col-fixed-12'>" + Html.EditorFor(m => m.Record.RoleTypeId, new { RoleTypeId = Model.Record.RoleTypeId }).ToHtmlString() + "</div>");
        ViewContext.Writer.Write("<div class='form-row-group col-fixed-5'>" + Html.EditorFor(m => m.Record.OrgRoleDefault).ToHtmlString() + " </div>");
        //ViewContext.Writer.Write("<div class='orgpoc-contact-grp form-height-auto'>" + Html.Action(MvcConstants.ActionContactComboBox, EntitiesAlias.Common.ToString(), new { Area = string.Empty, strDropDownViewModel = Newtonsoft.Json.JsonConvert.SerializeObject(contactDropDownModel) }) + "</div>");
        ViewContext.Writer.Write("<div class='form-row-group col-fixed-10 remove-margin-right'>" + Html.EditorFor(m => m.Record.StatusId, new { StatusId = Model.Record.StatusId }).ToHtmlString() + "</div>");
        ViewContext.Writer.Write("</div>");

    });
}).GetHtml()

    @Html.DevExpress().RoundPanel(settings =>
{
    settings.Name = "pnlActRoleResponisbilty";
    settings.Width = Unit.Percentage(100);
    settings.AllowCollapsingByHeaderClick = true;
    settings.ShowCollapseButton = true;
    settings.HeaderText = "Organization Responsibility, Job and Gateway";
    settings.Collapsed = false;
    settings.ControlStyle.CssClass = "form-layout org-job-gateway-panel";
    settings.SetContent(() =>
    {

        ViewContext.Writer.Write("<div class='row no-margin'>");
        ViewContext.Writer.Write("<div class='full-width checkbox-input'>");

        ViewContext.Writer.Write("<div class='col-md-3 width-25p'>");

        ViewContext.Writer.Write("<div class='form-row-group full-width'>" + Html.EditorFor(m => m.Record.PrxJobDefaultAnalyst).ToHtmlString() + "</div>");
        ViewContext.Writer.Write("</div>");
        ViewContext.Writer.Write("<div class='col-md-3 width-25p'>");

        ViewContext.Writer.Write("<div class='form-row-group full-width'>" + Html.EditorFor(m => m.Record.PrxJobDefaultResponsible).ToHtmlString() + "</div>");

        ViewContext.Writer.Write("</div>");
        ViewContext.Writer.Write("<div class='col-md-3 width-25p'>");

        ViewContext.Writer.Write("<div class='form-row-group full-width'>" + Html.EditorFor(m => m.Record.PrxJobGWDefaultAnalyst).ToHtmlString() + "</div>");

        ViewContext.Writer.Write("</div>");
        ViewContext.Writer.Write("<div class='col-md-3 width-25p'>");

        ViewContext.Writer.Write("<div class='form-row-group full-width'>" + Html.EditorFor(m => m.Record.PrxJobGWDefaultResponsible).ToHtmlString() + "</div>");
        ViewContext.Writer.Write("</div>");
        ViewContext.Writer.Write("</div>");
        ViewContext.Writer.Write("</div>");
    });
}).GetHtml()

    @Html.DevExpress().RoundPanel(settings =>
{
    settings.Name = "pnlpageControlOrgActRole";
    settings.Width = Unit.Percentage(100);
    settings.AllowCollapsingByHeaderClick = true;
    settings.ShowCollapseButton = true;
    settings.HeaderText = "Description and Comments";
    settings.Collapsed = true;
    settings.ControlStyle.CssClass = "form-layout org-job-gateway-panel";
    settings.SetContent(() =>
    {
        @Html.DevExpress().PageControl(pageControlSettings =>
        {
            pageControlSettings.Name = "pageControlOrgActRole";
            pageControlSettings.Width = Unit.Percentage(100);
            pageControlSettings.EnableTabScrolling = true;
            pageControlSettings.TabPages.Clear();
            pageControlSettings.TabPages.Add(page =>
            {
                var currentColumnSettings = Model.ColumnSettings.FirstOrDefault(ByteArrayFields.OrgRoleDescription.ToString());
                page.Name = currentColumnSettings.ColColumnName;
                page.Text = currentColumnSettings.ColAliasName;
                page.SetContent(() =>
                {
                    Html.RenderAction(MvcConstants.ActionRichEditDescription, Model.CallBackRoute.Controller, new { Area = Model.CallBackRoute.Area, docId = new M4PL.Entities.Support.Filter { FieldName = "ArbRecordId", Value = Model.Record.ArbRecordId.ToString() }, viewRecord = Model.Record, isPopup = Model.IsPopUp });
                });
            });
            pageControlSettings.TabPages.Add(page =>
            {
                var currentColumnSettings = Model.ColumnSettings.FirstOrDefault(ByteArrayFields.OrgComments.ToString());
                page.Name = currentColumnSettings.ColColumnName;
                page.Text = currentColumnSettings.ColAliasName;
                page.SetContent(() =>
                {
                    Html.RenderAction(MvcConstants.ActionRichEditComments, Model.CallBackRoute.Controller, new { Area = Model.CallBackRoute.Area, docId = new M4PL.Entities.Support.Filter { FieldName = "ArbRecordId", Value = Model.Record.ArbRecordId.ToString() }, viewRecord = Model.Record, isPopup = Model.IsPopUp });
                });
            });

        }).GetHtml();
    });
}).GetHtml()

    @Html.Partial(MvcConstants.EnteredChangedPartial, new M4PL.Web.Models.FormResult<BaseModel> { Record = Model.Record, ColumnSettings = Model.ColumnSettings, FormId = Model.FormId, IsPopUp = Model.IsPopUp })

    if (!Model.IsPopUp)
    {
        <div class="form-btns-block">
            <div class="half-width">
                @Html.DevExpress().Button(settings =>
           {
               settings.Name = "btn" + Model.CallBackRoute.Controller + "Save";//The name standard dependent on Ribbon's 'Save' functionality.Please make changes BaseController 'Ribbon' region 'Save' action
               settings.EnableTheming = true;
               settings.Text = (Model.Record.Id > 0) ? Model.Operations[OperationTypeEnum.Update].LangName : Model.Operations[OperationTypeEnum.Save].LangName;
               settings.AllowFocus = false;
               settings.ControlStyle.CssClass = "form-btn pull-right";
               settings.Enabled = (Model.Record.Id > 0) ? !(Model.Permission < Permission.EditAll) : !(Model.Permission < Permission.AddEdit);
               settings.ClientSideEvents.Click = Model.SubmitClick;
               settings.Images.Image.Url = WebExtension.ConvertByteToString(Model.Operations[(Model.Record.Id > 0) ? OperationTypeEnum.Edit : OperationTypeEnum.New].Icon);
           }).GetHtml()
            </div>
            <div class="half-width">
                @Html.DevExpress().Button(settings =>
           {
               settings.Name = "btn" + Model.CallBackRoute.Controller + "Cancel";
               settings.EnableTheming = true;
               settings.Text = Model.Operations[OperationTypeEnum.Cancel].LangName;
               settings.AllowFocus = false;
               settings.ControlStyle.CssClass = "form-btn pull-left";
               settings.ClientSideEvents.Click = Model.CancelClick; settings.Images.Image.Url = WebExtension.ConvertByteToString(Model.Operations[OperationTypeEnum.Cancel].Icon);
           }).GetHtml()
            </div>
        </div>
    }

}
@Html.Action("RecordSubPopupControl", "Popup", new { Area = string.Empty, strRoute = string.Empty, strByteArray = string.Empty })