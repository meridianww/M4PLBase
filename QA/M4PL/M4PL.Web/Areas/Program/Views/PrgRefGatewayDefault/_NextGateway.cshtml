@using M4PL.Web.Providers
@model  M4PL.Web.Models.ReportResult<M4PL.APIClient.ViewModels.Program.PrgRefGatewayDefaultView>

@Html.DevExpress().CallbackPanel(setings =>
{
    setings.Name = "NextGatewayMultiColumnDropDown";
    setings.ControlStyle.CssClass += "custom-cb-panel-container prealtive";
    setings.CallbackRouteValues = new { Controller = Model.CallBackRoute.Controller, Action = "NextJobGateway", Area = Model.CallBackRoute.Area, model = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Record) };
    setings.SetContent(() =>
    {
        @Html.DevExpress().Label(
                      settings =>
                      {
                          settings.Name = "lblNextGateway";
                          settings.Text = "Next Gateway";
                          settings.ControlStyle.CssClass = "job-advance-custom-lbl control-label inline-element";
                      }).GetHtml();

        Html.DevExpress().DropDownEdit(settings =>
        {
            settings.Name = "NextGatewayMultiColumnDropDownListBox";

            settings.SetDropDownWindowTemplateContent(c =>
            {
                Html.DevExpress().ListBox(listBoxSettings =>
                {
                    listBoxSettings.Name = "NextGatewayMultiColumnDropDownCheckBox";
                    listBoxSettings.ControlStyle.Border.BorderWidth = 0;
                    listBoxSettings.ControlStyle.BorderBottom.BorderWidth = 1;
                    listBoxSettings.Height = System.Web.UI.WebControls.Unit.Pixel(200);

                    listBoxSettings.Properties.EnableSelectAll = true;
                    listBoxSettings.Properties.FilteringSettings.ShowSearchUI = true;
                    listBoxSettings.Properties.SelectionMode = ListEditSelectionMode.CheckColumn;

                    if(ViewData["AvailableGateways"] != null)
                    {
                        foreach (var item in (IList<M4PL.Entities.Program.PrgRefGatewayDefault>)ViewData["AvailableGateways"])
                        {
                            listBoxSettings.Properties.Items.Add(item.NextGateWayIds, item.NextGateWayIds);
                        }
                    }
                    // need to do js operation later on
                    //listBoxSettings.Properties.ClientSideEvents.SelectedIndexChanged = "M4PLCommon.DropDownMultiSelect.UpdateTextJobChannel";
                    //listBoxSettings.Properties.ClientSideEvents.Init = "M4PLCommon.DropDownMultiSelect.UpdateTextJobChannelDefault";
                }).Render();

            });
            settings.Properties.AnimationType = AnimationType.None;
            //settings.Properties.ClientSideEvents.TextChanged = "M4PLCommon.DropDownMultiSelect.SynchronizeListBoxValuesJobChannel";
            //settings.Properties.ClientSideEvents.DropDown = "M4PLCommon.DropDownMultiSelect.SynchronizeListBoxValuesJobChannel";
        }).Render();

    });
}).GetHtml()

