/* Copyright (2018) Meridian Worldwide Transportation Group
   All Rights Reserved Worldwide */
-- =============================================        
-- Author:                    Akhil Chauhan  
-- Create date:               09/22/2018      
-- Description:               Ins a System Account
-- Execution:                 EXEC [dbo].[UpdSystemAccount]
-- Modified on:               11/27/2018( Nikhil - Introduced roleId and entity parameters to support security and generic ResetItemNumber. Also formatted passed params.)  
-- Modified Desc:  
-- ============================================= 
ALTER PROCEDURE  [dbo].[UpdSystemAccount]      
	@userId BIGINT  
	,@roleId BIGINT  
	,@entity NVARCHAR(100)
	,@id BIGINT = NULL  
	,@sysUserContactId BIGINT = NULL   
	,@sysScreenName NVARCHAR(50) = NULL 
	,@sysPassword NVARCHAR(250) = NULL   
	,@sysOrgId BIGINT = NULL   
	,@actRoleId BIGINT = NULL   
	,@isSysAdmin BIT = NULL 
	,@sysAttempts INT = NULL     
	,@statusId INT = NULL      
	,@dateChanged DATETIME2(7) = NULL  
	,@changedBy NVARCHAR(50) = NULL       
	,@isFormView BIT = 0
	,@actRoleEntity NVARCHAR(50)
	,@updateRoles BIT=0
AS  
BEGIN TRY                  
 SET NOCOUNT ON;     

  DECLARE @oldPassword Nvarchar(255)
  DECLARE @menuAccessLevel INT, @menuOptionLevel INT
  SELECT @oldPassword = SysPassword FROM SYSTM000OpnSezMe   WHERE Id = @id;
  DECLARE @wasAdmin BIT;
  SELECT @wasAdmin=IsSysAdmin from [dbo].[SYSTM000OpnSezMe]  WHERE Id = @id;
   UPDATE [dbo].[SYSTM000OpnSezMe] SET
               SysUserContactID			= CASE WHEN (@isFormView = 1) THEN @sysUserContactId WHEN ((@isFormView = 0) AND (@sysUserContactId=-100)) THEN NULL ELSE ISNULL(@sysUserContactId,SysUserContactID) END
			  ,SysScreenName			= CASE WHEN (@isFormView = 1) THEN @sysScreenName WHEN ((@isFormView = 0) AND (@sysScreenName='#M4PL#')) THEN NULL ELSE ISNULL(@sysScreenName,SysScreenName) END
			  ,SysPassword				= CASE WHEN (@isFormView = 1) THEN @sysPassword WHEN ((@isFormView = 0) AND (@sysPassword='#M4PL#')) THEN NULL ELSE ISNULL(@sysPassword,SysPassword)  END
			  ,SysOrgId					= CASE WHEN (@isFormView = 1) THEN @sysOrgId WHEN ((@isFormView = 0) AND (@sysOrgId=-100)) THEN NULL ELSE ISNULL(@sysOrgId,SysOrgId)  END
			  ,SysOrgRefRoleId			= CASE WHEN (@isFormView = 1) THEN @actRoleId WHEN ((@isFormView = 0) AND (@actRoleId=-100)) THEN NULL ELSE ISNULL(@actRoleId,SysOrgRefRoleId)  END
			  ,IsSysAdmin				= ISNULL(@isSysAdmin,IsSysAdmin)
			  ,SysAttempts				= CASE WHEN (@isFormView = 1) THEN @sysAttempts WHEN ((@isFormView = 0) AND (@sysAttempts=-100)) THEN NULL ELSE ISNULL(@sysAttempts,SysAttempts)  END
			 ,StatusId					= CASE WHEN (@isFormView = 1) THEN @statusId WHEN ((@isFormView = 0) AND (@statusId=-100)) THEN NULL ELSE ISNULL(@statusId,StatusId)  END
			  ,DateChanged				= @dateChanged
			  ,ChangedBy				= @changedBy 
			  WHERE Id = @id;



 --update sezme user password security tables
 UPDATE  [Security].[AUTH050_UserPassword]
 SET [Password] = @sysPassword 
    ,UpdatedBy  = @userId
	,UpdatedDatetime = GETUTCDATE()
 WHERE UserId = @id AND  @oldPassword <> @sysPassword
			    
 EXEC [dbo].[InsOrUpdOrgActRole] @userId, @roleId, @actRoleId, @sysOrgId, @sysUserContactId, @statusId, @dateChanged, @changedBy,@actRoleEntity, @isSysAdmin
 
 IF(@wasAdmin<> @isSysAdmin  and @isSysAdmin=1 and @updateRoles=1)
 
 BEGIN
  
    SELECT @menuOptionLevel=max(SysRefId) from [dbo].[SYSTM010MenuOptionLevel] --TO GET HIGHEST OPTION(SYSTEMS)
    SELECT @menuAccessLevel=max(SysRefId) FROM [dbo].[SYSTM010MenuAccessLevel] --TO GET HIGHEST ACCESS(ADD,EDIT,DELETE)
 
  UPDATE [dbo].[ORGAN021Act_SecurityByRole]  SET SECMENUOPTIONLEVELID=@menuOptionLevel,
  SecMenuAccessLevelId=@menuAccessLevel,StatusId=1 WHERE ContactId=@sysUserContactId

  UPDATE [dbo].[ORGAN022Act_SubSecurityByRole]  SET SubsmENUOPTIONLEVELID=@menuOptionLevel,
  subsMenuAccessLevelId=@menuAccessLevel,StatusId=1 WHERE OrgSecurityByRoleId in (select id from [dbo].[ORGAN021Act_SecurityByRole]
  WHERE ContactId=@sysUserContactId)
 END 

 IF(@wasAdmin<> @isSysAdmin  and @isSysAdmin=0 and @updateRoles=1)
 
 BEGIN
   SELECT @menuOptionLevel=max(SysRefId) from [dbo].[SYSTM010MenuOptionLevel] --TO GET highest OPTION(SYSTEMS)
   SELECT @menuAccessLevel=min(SysRefId) FROM [dbo].[SYSTM010MenuAccessLevel] --TO GET lowest ACCESS(ADD,EDIT,DELETE)
 
  UPDATE [dbo].[ORGAN021Act_SecurityByRole]  SET SECMENUOPTIONLEVELID=@menuOptionLevel,
  SecMenuAccessLevelId=@menuAccessLevel,StatusId=1 WHERE ContactId=@sysUserContactId

  UPDATE [dbo].[ORGAN022Act_SubSecurityByRole]  SET SubsmENUOPTIONLEVELID=@menuOptionLevel,
  subsMenuAccessLevelId=@menuAccessLevel,StatusId=1 WHERE OrgSecurityByRoleId in (select id from [dbo].[ORGAN021Act_SecurityByRole]
  WHERE ContactId=@sysUserContactId)

  SELECT @menuOptionLevel=min(SysRefId) from [dbo].[SYSTM010MenuOptionLevel] --WHERE MolMenuLevelTitle='No Rights'
  SELECT @menuAccessLevel=min(SysRefId) FROM [dbo].[SYSTM010MenuAccessLevel]-- WHERE MalTitle='No Access'

  UPDATE [dbo].[ORGAN021Act_SecurityByRole] SET SECMENUOPTIONLEVELID=@menuOptionLevel,
  SecMenuAccessLevelId=@menuAccessLevel, StatusId=2 where id in (SELECT sec.Id FROM [dbo].[ORGAN021Act_SecurityByRole] sec
  JOIN [dbo].[SYSTM000Ref_Options] optn on sec.SecMainModuleId=optn.id and contactId=@sysUserContactId and optn.SysOptionName='Administration')

   SELECT @menuOptionLevel=max(SysRefId) from [dbo].[SYSTM010MenuOptionLevel] --WHERE MolMenuLevelTitle='System'
  SELECT @menuAccessLevel=max(SysRefId) FROM [dbo].[SYSTM010MenuAccessLevel]-- WHERE MalTitle='Add, Edit & Delete'

  UPDATE [dbo].[ORGAN021Act_SecurityByRole] SET SECMENUOPTIONLEVELID=@menuOptionLevel,
  SecMenuAccessLevelId=@menuAccessLevel, StatusId=1 where id in (SELECT sec.Id FROM [dbo].[ORGAN021Act_SecurityByRole] sec
  JOIN [dbo].[SYSTM000Ref_Options] optn on sec.SecMainModuleId=optn.id and contactId=@sysUserContactId and optn.SysOptionName='Organization')

UPDATE [dbo].[ORGAN022Act_SubSecurityByRole] SET SubsMENUOPTIONLEVELID=@menuOptionLevel,
  subsMenuAccessLevelId=@menuAccessLevel, StatusId=1 where OrgSecurityByRoleId in (SELECT sec.Id FROM [dbo].[ORGAN021Act_SecurityByRole] sec
  JOIN [dbo].[SYSTM000Ref_Options] optn on sec.SecMainModuleId=optn.id and
   OrgActRoleId=@actRoleId and contactId=@sysUserContactId and optn.SysOptionName='Organization')


 END 
 SELECT [Id]  
      ,[SysUserContactID]  
      ,[SysScreenName]  
      ,[SysPassword]  
      ,[SysOrgId]  
      ,[SysOrgRefRoleId]  
      ,[IsSysAdmin]  
      ,[SysAttempts]  
      ,[SysLoggedIn]  
	  ,[SysLoggedInCount]  
      ,[SysDateLastAttempt]  
      ,[SysLoggedInStart]  
      ,[SysLoggedInEnd]  
      ,[StatusId]  
      ,[DateEntered]  
      ,[EnteredBy]  
      ,[DateChanged]  
      ,[ChangedBy] 
  FROM [dbo].[SYSTM000OpnSezMe]  
 WHERE [Id]=@id;  
END TRY                  
BEGIN CATCH                  
 DECLARE  @ErrorMessage VARCHAR(MAX) = (SELECT ERROR_MESSAGE())                  
   ,@ErrorSeverity VARCHAR(MAX) = (SELECT ERROR_SEVERITY())                  
   ,@RelatedTo VARCHAR(100) = (SELECT OBJECT_NAME(@@PROCID))                  
 EXEC [dbo].[ErrorLog_InsDetails] @RelatedTo, NULL, @ErrorMessage, NULL, NULL, @ErrorSeverity                  
END CATCH