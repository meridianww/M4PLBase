ALTER PROCEDURE [dbo].[GetPPPGatewayContactCombobox] 
 @langCode NVARCHAR(10),  
 @orgId BIGINT,  
 @entity NVARCHAR(100),  
 @fields NVARCHAR(2000),  
 @pageNo INT,  
 @pageSize INT,  
 @orderBy NVARCHAR(500),  
 @like NVARCHAR(500) = NULL,  
 @where NVARCHAR(500) = null,
 @primaryKeyValue NVARCHAR(100) = null,
 @primaryKeyName NVARCHAR(50) = null,  
 @parentId BIGINT = null,
 @entityFor NVARCHAR(50) = null
AS 


BEGIN TRY 
IF OBJECT_ID ('tempdb.dbo.#contactComboTable') IS NOT NULL
   DROP TABLE #contactComboTable

CREATE TABLE #contactComboTable(    
  Id BIGINT
 ,ConFullName NVARCHAR(100) 
 ,ConJobTitle NVARCHAR(100)
 ,ConCompany NVARCHAR(100)
 ,ConFileAs NVARCHAR(100)
  )   
--Adding for 39449
IF @entityFor = 'PPPRoleCodeContact' OR @entityFor = 'PPPRespGateway'
BEGIN
DECLARE @CustomerId INT
SELECT @CustomerId=PrgCustID FROM PRGRM000Master where id=@parentid

INSERT INTO #contactComboTable(Id,ConFullName,ConJobTitle,ConCompany,ConFileAs)  
(
--GET EMPLOYEE TYPE
select contact.Id,contact.ConFullName,contact.ConJobTitle,contact.ConCompany ,contact.ConFileAs from CONTC000Master contact
INNER JOIN  [dbo].[PRGRM020Program_Role] pgContact ON pgContact.[PrgRoleContactID] = contact.Id  
INNER JOIN PRGRM000Master pgm  ON pgm.Id  =  pgContact.ProgramID 
WHERE pgContact.ProgramID = @parentId AND ISNULL(contact.StatusId,1)<>3 and contact.ConTypeId=62
 UNION
 --GET CUSTOMER CONTACT
 SELECT contact.Id,contact.ConFullName,contact.ConJobTitle,contact.ConCompany ,contact.ConFileAs FROM  [dbo].CONTC000Master contact
INNER JOIN    [dbo].[CUST010Contacts] custContact ON  contact.Id = custContact.[CustContactMSTRID]
INNER JOIN   CUST000Master cust ON custContact.[CustCustomerID] = cust.Id
INNER JOIN PRGRM000Master pgm  ON pgm.PrgCustID  =  cust.Id 
WHERE cust.ID=@CustomerId
AND ISNULL(custContact.StatusId,1)<>3 
AND ISNULL(contact.StatusId,1) <>3
UNION
 --GET CUSTOMER DC LOC CONTACT
select contact.Id,contact.ConFullName,contact.ConJobTitle,contact.ConCompany ,contact.ConFileAs 
FROM [dbo].[CUST040DCLocations] cdc
JOIN [dbo].[CONTC000Master] contact ON cdc.CdcContactMSTRID = contact.Id--to check
WHERE cdc.CdcCustomerID = @CustomerId
AND ISNULL(cdc.StatusId,1)<>3 and ISNULL(contact.StatusId,1)<>3
UNION
--GET CUSTOMER DC LOCATION SUB CONTACT
select contact.Id,contact.ConFullName,contact.ConJobTitle,contact.ConCompany ,contact.ConFileAs 
 FROM [dbo].[CUST041DCLocationContacts] cust
 JOIN [dbo].[CUST040DCLocations] cdc ON cust.ClcCustDcLocationId = cdc.Id
 JOIN [dbo].[CUST000Master] cu ON cdc.CdcCustomerID = cu.Id
 JOIN [dbo].[CONTC000Master] contact ON cust.ClcContactMSTRID = contact.Id
 WHERE cu.[Id]=@CustomerId AND ISNULL(cust.StatusId,1)<>3 AND ISNULL(cdc.StatusId,1)<>3 AND ISNULL(contact.StatusId,1)<>3
 --SELECT * FROM [dbo].[PRGRM051VendorLocations]
UNION
--GET VENDOR CONTACT
SELECT contact.Id,contact.ConFullName,contact.ConJobTitle,contact.ConCompany ,contact.ConFileAs FROM  [dbo].CONTC000Master contact
INNER JOIN  [dbo].[VEND010Contacts] vendContact ON contact.Id = vendContact.[VendContactMSTRID]
INNER JOIN   VEND000Master vend ON vendContact.[VendVendorID] = vend.Id
WHERE vendContact.[VendVendorID] IN (SELECT DISTINCT PvlVendorID FROM
[dbo].[PRGRM051VendorLocations] pvl WHERE pvl.PvlProgramID = @parentId AND ISNULL(pvl.StatusId,1)<>3)
 AND ISNULL(contact.StatusId,1) <>3
 AND ISNULL(vendContact.StatusId,1)<>3 
UNION
--GET VENDOR DC CONTACT
SELECT contact.Id,contact.ConFullName,contact.ConJobTitle,contact.ConCompany ,contact.ConFileAs 
FROM [dbo].[VEND040DCLocations]  vdc
	JOIN [dbo].[CONTC000Master] contact ON vdc.VdcContactMSTRID = contact.Id
	WHERE vdc.VdcVendorId IN (SELECT DISTINCT PvlVendorID FROM
[dbo].[PRGRM051VendorLocations] pvl WHERE pvl.PvlProgramID = @parentId AND ISNULL(pvl.StatusId,1)<>3)
 AND ISNULL(contact.StatusId,1)<>3
 AND ISNULL(vdc.StatusId,1)<>3 
	--select * from [dbo].[CUST040DCLocations]
UNION
--GET VENDOR DC CHILD CONTACT
SELECT contact.Id,contact.ConFullName,contact.ConJobTitle,contact.ConCompany ,contact.ConFileAs 
FROM [dbo].[VEND041DCLocationContacts] vend
  JOIN [dbo].[VEND040DCLocations] cdc ON vend.VlcVendDcLocationId = cdc.Id
  JOIN [dbo].[VEND000Master] ve ON cdc.VdcVendorID = ve.Id
  JOIN [dbo].[CONTC000Master] contact ON vend.VlcContactMSTRID = contact.Id
 WHERE ve.[Id] IN (SELECT DISTINCT PvlVendorID FROM
[dbo].[PRGRM051VendorLocations] pvl WHERE pvl.PvlProgramID = @parentId AND ISNULL(pvl.StatusId,1)<>3)
 AND ISNULL(contact.StatusId,1)<>3
 AND ISNULL(vend.StatusId,1)<>3 
)
END

--ELSE IF @entityFor = 'PPPRespGateway' --OR  @entityFor = 'PPPRoleCodeContact'
--   BEGIN
---- Program Role Contacts
-- INSERT INTO #contactComboTable(Id,ConFullName,ConJobTitle,ConCompany,ConFileAs)  

--(select contact.Id,contact.ConFullName,contact.ConJobTitle,contact.ConCompany ,contact.ConFileAs from CONTC000Master contact

--INNER JOIN  [dbo].[PRGRM020Program_Role] pgContact ON pgContact.[PrgRoleContactID] = contact.Id  
--INNER JOIN PRGRM000Master pgm  ON pgm.Id  =  pgContact.ProgramID 
--WHERE pgContact.ProgramID = @parentId AND contact.StatusId In(1,2)
--UNION

---- Customer Contacts
--SELECT contact.Id,contact.ConFullName,contact.ConJobTitle,contact.ConCompany ,contact.ConFileAs FROM  [dbo].CONTC000Master contact
--INNER JOIN    [dbo].[CUST010Contacts] custContact ON  contact.Id = custContact.[CustContactMSTRID]
--INNER JOIN   CUST000Master cust ON custContact.[CustCustomerID] = cust.Id
--INNER JOIN PRGRM000Master pgm  ON pgm.PrgCustID  =  cust.Id 
--WHERE pgm.Id = @parentId
--AND custContact.StatusId In(1,2) 
--AND contact.StatusId In(1,2)

--UNION
----Vendor Contacts
--SELECT contact.Id,contact.ConFullName,contact.ConJobTitle,contact.ConCompany ,contact.ConFileAs FROM  [dbo].CONTC000Master contact
--INNER JOIN  [dbo].[VEND010Contacts] vendContact ON contact.Id = vendContact.[VendContactMSTRID]
--INNER JOIN   VEND000Master vend ON vendContact.[VendVendorID] = vend.Id
--WHERE vendContact.[VendVendorID] IN (SELECT DISTINCT PvlVendorID FROM

-- [dbo].[PRGRM051VendorLocations] pvl WHERE pvl.PvlProgramID = @parentId )
-- AND contact.StatusId In(1,2)
-- AND vendContact.StatusId In(1,2) 
-- )
--  END

ELSE IF @entityFor = 'PPPJobRespContact'
   BEGIN
     INSERT INTO #contactComboTable(Id,ConFullName,ConJobTitle,ConCompany,ConFileAs)  
	EXEC [dbo].[GetJobResponsibleComboboxContacts] @orgId,@parentId 
	 
   END
ELSE IF @entityFor = 'PPPJobAnalystContact'
   BEGIN
     INSERT INTO #contactComboTable(Id,ConFullName,ConJobTitle,ConCompany,ConFileAs)  
	EXEC [dbo].[GetJobAnalystComboboxContacts]  @orgId,@parentId 
END
 
  --find new page no
    IF(ISNULL(@primaryKeyValue, '') <> '')
	 BEGIN
    
	IF NOT EXISTS(SELECT Id FROM #contactComboTable Where Id = @primaryKeyValue)
	BEGIN
	    INSERT INTO #contactComboTable(Id,ConFullName,ConJobTitle,ConCompany,ConFileAs)  
	    SELECT contact.Id,contact.ConFullName,contact.ConJobTitle,contact.ConCompany ,contact.ConFileAs FROM  [dbo].CONTC000Master contact 
	    WHERE contact.Id = @primaryKeyValue;
	END


	   DECLARE @newPgNo INT
	   SELECT @newPgNo = Item FROM (SELECT ROW_NUMBER() OVER(ORDER BY Contact.Id) as Item  ,Contact.Id From #contactComboTable  Contact) t WHERE t.Id= @primaryKeyValue
	   IF @newPgNo IS NOT NULL
	   BEGIN
		   SET @newPgNo =  @newPgNo/@pageSize + 1; 
		   SET @pageSize = @newPgNo * @pageSize;
	   END
	END
	
	DECLARE @sqlCommand NVARCHAR(MAX) ='SELECT  * FROM  #contactComboTable '+  @entity + ' WHERE 1=1 '  
	
	--Apply Like Statement
	IF(ISNULL(@like, '') != '')  
	  BEGIN  
	  SET @sqlCommand = @sqlCommand + ' AND ('  
	   DECLARE @likeStmt NVARCHAR(MAX)  
  
	  SELECT @likeStmt = COALESCE(@likeStmt + ' OR ','') + Item + ' LIKE ''%' + @like + '%' + '''' FROM [dbo].[fnSplitString](@fields, ',')    
	  SET @sqlCommand = @sqlCommand + @likeStmt + ') '  
	  END  
	 -- Apply Where condition
	 IF(ISNULL(@where, '') != '')  
	  BEGIN  
		 SET @sqlCommand = @sqlCommand + @where   
	 END  
	
	--Apply Ordering AND paged Data
	SET @sqlCommand = @sqlCommand + ' ORDER BY '+ @fields +' OFFSET @pageSize * (@pageNo - 1) ROWS FETCH NEXT @PageSize ROWS ONLY OPTION (RECOMPILE);'   

	EXEC sp_executesql @sqlCommand, N'@pageNo INT, @pageSize INT, @where NVARCHAR(100)' ,  
		 @pageNo = @pageNo,   
		 @pageSize = @pageSize,  
		 @where = @where
		 

 





 END TRY                  
BEGIN CATCH                  
 DECLARE  @ErrorMessage VARCHAR(MAX) = (SELECT ERROR_MESSAGE())                  
   ,@ErrorSeverity VARCHAR(MAX) = (SELECT ERROR_SEVERITY())                  
   ,@RelatedTo VARCHAR(100) = (SELECT OBJECT_NAME(@@PROCID))                  
 EXEC [dbo].[ErrorLog_InsDetails] @RelatedTo, NULL, @ErrorMessage, NULL, NULL, @ErrorSeverity                  
END CATCH