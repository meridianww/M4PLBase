@model M4PL.Entities.ColumnsChild
@{
    //var res = M4PL.APIClient.API_ChooseColumns.GetAllColumns(Convert.ToString(ViewContext.RouteData.Values["controller"])).Data;
    Model.ColPageName = Convert.ToString(ViewContext.RouteData.Values["controller"]);
}

@if (Model != null)
{
    <form id="frmChoosedColumns" name="frmChoosedColumns" enctype="multipart/form-data" method="post" action='@Url.Action("SaveChoosedColumns", "AllSettings")'>
        <div class="modal-content">
            <div class="modal-header">

                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title custom_colFont"><strong>Customize Contact List</strong></h4>
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <div class="col-md-12 set_ChooseCol">Choose Which coloumns to show on list</div>
                    <div class="col-md-12"><div class="col-md-4 set_MarginLeft">Available Columns:</div><div class="col--md-offset-2 col-md-6 pull-right set_ShowCol">Show Columns in this Order:</div></div>
                    <br />
                    <div class="col-md-12">

                        <div class="col-md-4 form-group set_ListMarLft">
                            <div class="row">
                                @Html.DevExpress().ListBoxFor(m => m.LstColumnName,
                                settings =>
                                {
                                    settings.CallbackRouteValues = new { Controller = "AllSettings", Action = "GetAllColumns" };
                                    settings.Width = 120;
                                    settings.Height = 180;
                                    settings.Properties.SelectionMode = ListEditSelectionMode.Multiple;
                                    settings.Properties.ValueType = typeof(string);
                                    settings.Properties.TextField = "ColColumnName";
                                    settings.Properties.ValueField = "ColColumnName";
                                }).BindList(Model.LstColumnName).GetHtml()
                            </div>
                        </div>
                        <div class="col-md-2 set_AddSel">
                            <div class="row">
                                <div class="col-md-2 form-group">
                                    <button type="button" class="btn btn-primary btn-sm set_AddEle">
                                        Add&nbsp;&nbsp;<span class="glyphicon glyphicon-menu-right"></span><span class="glyphicon glyphicon-menu-right"></span>
                                    </button>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-2">
                                    <button type="button" class="btn btn-primary btn-sm set_Remove">
                                        <span class="glyphicon glyphicon-menu-left"></span><span class="glyphicon glyphicon-menu-left"></span>&nbsp;&nbsp;Remove
                                    </button>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-4 set_RemSel">
                            <div class="row">
                                @Html.DevExpress().ListBoxFor(m => m.LstDisplayColumnName,
                            settings =>
                            {
                                settings.CallbackRouteValues = new { Controller = "AllSettings", Action = "GetAllColumns" };
                                settings.Width = 120;
                                settings.Height = 180;
                                settings.Properties.SelectionMode = ListEditSelectionMode.Multiple;
                                settings.Properties.ValueType = typeof(string);
                                settings.Properties.TextField = "ColColumnName";
                                settings.Properties.ValueField = "ColColumnName";
                            }).BindList(Model.LstDisplayColumnName).GetHtml()
                            </div>
                        </div>
                        <div class="col-md-2 mov_UpMarlft">
                            <div class="row">
                                <div class="col-md-2 form-group">
                                    <button type="button" class="btn btn-primary btn-sm mov_UpPadding">
                                        <span class="glyphicon glyphicon-circle-arrow-up"></span>&nbsp;&nbsp;&nbsp;Move Up
                                    </button>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-2 form-group">
                                    <button type="button" class="btn btn-primary btn-sm mov_DownPadding">
                                        <span class="glyphicon glyphicon-circle-arrow-down"></span>&nbsp;&nbsp;Move Down
                                    </button>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-2  form-group">
                                    <button type="button" class="btn btn-primary btn-sm add_FrzPadding">
                                        <span class="glyphicon glyphicon-plus-sign"></span>&nbsp;&nbsp;Add Freeze Pane
                                    </button>
                                </div>
                            </div>



                        </div>
                        <div class="row">
                            <div class="col-md-4 checkbox-inline pull-right quick_Entrychkbox">
                                <input type="checkbox" value="" checked><label class="quick_EntryFont">Quick Entry</label>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-offset-9 col-md-3  form-group">
                            <button type="button" class="btn btn-primary btn-sm">
                                <span class="glyphicon glyphicon-repeat  gly-rotate-270"></span>&nbsp;&nbsp;Restore Defaults
                            </button>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        <div class="col-md-12">
                            <p>Hold down the Ctrl (windows) / Command (Mac) button to select multiple options.</p>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <input type="submit" value="OK" class="btn btn-default okbtn_Padding" data-dismiss="modal" onclick="javascript:frmChoosedColumns.submit();" />
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </form>
}
<!-- Modal content-->
