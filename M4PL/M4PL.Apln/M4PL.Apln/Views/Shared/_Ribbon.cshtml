@using System.Drawing;
@using System.Web.UI.WebControls;

@functions{
    T CreateButtonItem<T>(string name, string text, string iconID) where T : RibbonButtonItem
    {
        return CreateButtonItem<T>(name, text, RibbonItemSize.Small, iconID);
    }
    T CreateButtonItem<T>(string name, string text, RibbonItemSize size, string iconID) where T : RibbonButtonItem
    {
        var item = Activator.CreateInstance<T>();
        item.Name = name;
        item.Text = text;
        item.Size = size;
        if (size == RibbonItemSize.Large)
            item.LargeImage.IconID = iconID;
        else
            item.SmallImage.IconID = iconID;
        return item;
    }
    RibbonGalleryItem CreateGalleryItem(string text, string iconID)
    {
        var galleryItem = new RibbonGalleryItem
        {
            Text = text,
            Value = text,
            ToolTip = text
        };
        galleryItem.Image.IconID = iconID;
        return galleryItem;
    }

    RERComboBoxCommandBase PrepareComboBoxCommand(RERComboBoxCommandBase command)
    {
        command.FillItems();
        command.PropertiesComboBox.Width = Unit.Pixel(100);
        return command;
    }
}

@Html.DevExpress().Panel(settings =>
{
    settings.Name = "HeaderPanel";
    settings.ControlStyle.ForeColor = System.Drawing.Color.WhiteSmoke;
    settings.ControlStyle.BackColor = System.Drawing.Color.White;
    settings.ControlStyle.CssClass = "myMenuStyle";
    settings.FixedPosition = DevExpress.Web.PanelFixedPosition.WindowTop;
    settings.SettingsCollapsing.ExpandEffect = DevExpress.Web.PanelExpandEffect.Auto;
    settings.Height = Unit.Percentage(20);
    // Defines panel content
    settings.SetContent(() =>
    {
        // MVC Menu extension as a content
        Html.DevExpress().Menu(s =>
        {
            s.Name = "Menu";
            s.Items.Add(item =>
            {
                item.ItemStyle.Cursor = CursorType.None.ToString();
                item.Image.Url = "~/Images/logo.png";
                item.Text = "";
                s.EnableAnimation = false;
            });
        }).GetHtml();


        Html.DevExpress().Ribbon(s1 =>
        {
            s1.Name = "MyRibbon";
            s1.ClientSideEvents.CommandExecuted = "onCommandExecuted";
            var homeTab = s1.Tabs.Add("M4PL");
            var customerTab = s1.Tabs.Add("Customer");
            var vendorsTab = s1.Tabs.Add("Vendors");
            var financeTab = s1.Tabs.Add("Finance");
            var scannerTab = s1.Tabs.Add("Scanner");
            var hkTab = s1.Tabs.Add("House Keeping");
            var adminTab = s1.Tabs.Add("Admin");

            homeTab.Groups.Add(vwGp =>
            {
                vwGp.Name = "view";
                vwGp.Text = "";

                vwGp.Items.Add(MVCxRibbonItemType.ButtonItem, fv =>
                {
                    fv.Text = "Form View";
                    fv.Name = "FormView";
                    fv.Size = RibbonItemSize.Large;
                    ((RibbonButtonItem)fv).LargeImage.IconID = IconID.ToolboxitemsTableofcontent32x32;
                });

                vwGp.Items.Add(MVCxRibbonItemType.ButtonItem, dsv =>
                {
                    dsv.Text = "DataSheet View";
                    dsv.Name = "DataSheetView";
                    dsv.Size = RibbonItemSize.Large;
                    ((RibbonButtonItem)dsv).LargeImage.IconID = IconID.SpreadsheetFreezepanes32x32;
                });
            });

            homeTab.Groups.Add(cbGp =>
            {
                cbGp.Name = "Clipboard";
                cbGp.Text = "Clipboard";
                cbGp.Image.IconID = IconID.ReportsReport32x32;
                cbGp.ShowDialogBoxLauncher = true;

                cbGp.Items.Add(new RERPasteCommand(RibbonItemSize.Large) { Text = "Paste", ToolTip = "Ctrl + V" });
                cbGp.Items.Add(new RERCutCommand(RibbonItemSize.Small) { Text = "Cut", ToolTip = "Ctrl + X" });
                cbGp.Items.Add(new RERCopyCommand(RibbonItemSize.Small) { Text = "Copy", ToolTip = "Ctrl + C" });
            });

            homeTab.Groups.Add(sfGp =>
            {
                sfGp.Name = "SortFilter";
                sfGp.Text = "Sort & Filter";
                sfGp.Image.IconID = IconID.ReportsReport32x32;
                sfGp.ShowDialogBoxLauncher = true;


                sfGp.Items.Add(CreateButtonItem<RibbonButtonItem>("ClearFilter", "Clear Filter", RibbonItemSize.Large, IconID.FilterClearfilter32x32));

                sfGp.Items.Add(CreateButtonItem<RibbonButtonItem>("Ascending", "Ascending", IconID.DataSortasc16x16office2013));
                sfGp.Items.Add(CreateButtonItem<RibbonButtonItem>("Decending", "Decending", IconID.DataSortdesc16x16office2013));
                sfGp.Items.Add(CreateButtonItem<RibbonButtonItem>("RemoveSort", "Remove Sort", IconID.DataSortasc16x16gray));

                sfGp.Items.Add(CreateButtonItem<RibbonButtonItem>("ChooseColumns", "Choose Columns", IconID.DataSelectdata16x16));
                sfGp.Items.Add(CreateButtonItem<RibbonButtonItem>("Advanced", "Advanced", IconID.ActionsFilter16x16devav));
                sfGp.Items.Add(CreateButtonItem<RibbonButtonItem>("ToggleFilter", "Toggle Filter", IconID.FilterFilter16x16));

            });

            homeTab.Groups.Add(rdGp =>
            {
                rdGp.Name = "Records";
                rdGp.Text = "Records";
                rdGp.Image.IconID = IconID.ReportsReport32x32;
                rdGp.ShowDialogBoxLauncher = true;

                rdGp.Items.Add(CreateButtonItem<RibbonDropDownButtonItem>("RefreshAll", "Refresh All", RibbonItemSize.Large, IconID.ActionsRefresh32x32office2013));

                rdGp.Items.Add(CreateButtonItem<RibbonButtonItem>("New", "New", IconID.ActionsInsert16x16office2013));
                rdGp.Items.Add(CreateButtonItem<RibbonButtonItem>("Save", "Save", IconID.ActionsSave16x16devav));
                rdGp.Items.Add(CreateButtonItem<RibbonButtonItem>("Delete", "Delete", IconID.EditDelete16x16));

                //rdGp.Items.Add(CreateButtonItem<RibbonButtonItem>("Totals", "Totals", IconID.DataSummary16x16office2013));
                //rdGp.Items.Add(CreateButtonItem<RibbonButtonItem>("Spelling", "Spelling", IconID.FormatSpellcheckasyoutype16x16office2013));
                //rdGp.Items.Add(CreateButtonItem<RibbonButtonItem>("More", "More", IconID.ArrangeMorelayoutoptions16x16));
            });

            homeTab.Groups.Add(fdGp =>
            {
                fdGp.Name = "Find";
                fdGp.Text = "Find";
                fdGp.Image.IconID = IconID.ReportsReport32x32;
                fdGp.ShowDialogBoxLauncher = true;

                fdGp.Items.Add(CreateButtonItem<RibbonDropDownButtonItem>("Find", "Find", RibbonItemSize.Large, IconID.FindFind32x32));

                fdGp.Items.Add(CreateButtonItem<RibbonButtonItem>("Replace", "Replace", IconID.FormatReplace16x16));
                fdGp.Items.Add(CreateButtonItem<RibbonButtonItem>("GoTo", "Go To", IconID.ArrowsNext16x16office2013));
                fdGp.Items.Add(CreateButtonItem<RibbonButtonItem>("Select", "Select", IconID.ActionsSelect16x16office2013));
            });

            //   homeTab.Groups.Add(tfGp =>
            //{
            //    tfGp.Name = "TextFormatting";
            //    tfGp.Text = "Text Formatting";
            //    tfGp.Image.IconID = IconID.ReportsReport32x32;
            //    tfGp.ShowDialogBoxLauncher = true;

            //    tfGp.Items.Add(PrepareComboBoxCommand(new RERFontNameCommand()));
            //    tfGp.Items.Add(PrepareComboBoxCommand(new RERFontSizeCommand()));

            //    tfGp.Items.Add(new RERFontBoldCommand(RibbonItemSize.Small) { Text = "", ToolTip = "Ctrl + B" });
            //    tfGp.Items.Add(new RERFontItalicCommand(RibbonItemSize.Small) { Text = "", ToolTip = "Ctrl + B" });
            //    tfGp.Items.Add(new RERFontUnderlineCommand(RibbonItemSize.Small) { Text = "", ToolTip = "Ctrl + U" });

            //    tfGp.Items.Add(new RERIncreaseFontSizeCommand(RibbonItemSize.Small) { Text = "", ToolTip = "Increase Size" });
            //    tfGp.Items.Add(new RERDecreaseFontSizeCommand(RibbonItemSize.Small) { Text = "", ToolTip = "Decrease Size" });

            //    tfGp.Items.Add(new RERFontColorCommand(RibbonItemSize.Small) { Text = "", ToolTip = "Font Color" });
            //    tfGp.Items.Add(new RERFontBackColorCommand() { Size = RibbonItemSize.Small, Text = "", ToolTip = "Background Color" });

            //    tfGp.Items.Add(new RERBulletedListCommand() { Size = RibbonItemSize.Small, Text = "", ToolTip = "Bulleted List" });
            //    tfGp.Items.Add(new RERNumberingListCommand() { Size = RibbonItemSize.Small, Text = "", ToolTip = "Numbering List" });
            //    tfGp.Items.Add(new RERDecreaseIndentCommand() { Size = RibbonItemSize.Small, Text = "", ToolTip = "Decrease Indent" });
            //    tfGp.Items.Add(new RERIncreaseIndentCommand() { Size = RibbonItemSize.Small, Text = "", ToolTip = "Increase Indent" });

            //    tfGp.Items.Add(new RERAlignLeftCommand() { Size = RibbonItemSize.Small, Text = "", ToolTip = "Align left", SubGroupName = "Align" });
            //    tfGp.Items.Add(new RERAlignCenterCommand() { Size = RibbonItemSize.Small, Text = "", ToolTip = "Align Center", SubGroupName = "Align" });
            //    tfGp.Items.Add(new RERAlignRightCommand() { Size = RibbonItemSize.Small, Text = "", ToolTip = "Align Right", SubGroupName = "Align" });
            //    tfGp.Items.Add(new RERAlignJustifyCommand() { Size = RibbonItemSize.Small, Text = "", ToolTip = "Align Justify", SubGroupName = "Align" });

            //});

        }).GetHtml();
       
    });
}).GetHtml()


@*@Html.DevExpress().Panel(settings1 =>
{
    settings1.Name = "RibbonPanel";
    settings1.ControlStyle.ForeColor = System.Drawing.Color.WhiteSmoke;
    settings1.ControlStyle.BackColor = System.Drawing.Color.White;
    settings1.ControlStyle.CssClass = "myMenuStyle";
    settings1.FixedPosition = DevExpress.Web.PanelFixedPosition.WindowTop;
    settings1.SettingsCollapsing.ExpandEffect = DevExpress.Web.PanelExpandEffect.Auto;
    settings1.Height = Unit.Percentage(8);
    // Defines panel content
    settings1.SetContent(() =>
    {
    
    });
}).GetHtml()*@

<div class="set_ClrBoth"></div>
<style>
    .dxm-main ul.dx .dxm-item, .dxm-popup ul.dx .dxm-item, .dxm-main ul.dxm-t .dxm-item span, .dxm-popup ul.dxm-t .dxm-item span, .dxm-main ul.dxm-ti .dxm-item span, .dxm-popup ul.dxm-ti .dxm-item span, .dxm-main ul.dxm-ti .dxm-item img, .dxm-popup ul.dxm-ti .dxm-item img, .dxm-main ul.dxm-t .dxm-item.dxm-subMenu, .dxm-popup ul.dxm-t .dxm-item.dxm-subMenu, .dxm-main ul.dxm-ti .dxm-item.dxm-subMenu, .dxm-popup ul.dxm-ti .dxm-item.dxm-subMenu {
    cursor: default !important;
}

 .dxmLite_Office2010Black .dxm-main .dxm-hovered{
     background: none;
 }
 
</style>