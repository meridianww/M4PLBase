@*Copyright (2016) Meridian Worldwide Transportation Group
    All Rights Reserved Worldwide
    ====================================================================================================================================================
    Program Title:                                Meridian 4th Party Logistics(M4PL)
    Programmer:                                   Deepika
    Date Programmed:                              21/3/2016
    Program Name:                                 _Ribbon
    Purpose:                                      Provides view for ribbon

    ====================================================================================================================================================*@

@using System.Drawing;
@using System.Web.UI.WebControls;

@*Header Ribbon*@

@functions{
    T CreateButtonItem<T>(string name, string text, string iconID) where T : RibbonButtonItem
    {
        return CreateButtonItem<T>(name, text, RibbonItemSize.Small, iconID);
    }
    T CreateButtonItem<T>(string name, string text, RibbonItemSize size, string iconID) where T : RibbonButtonItem
    {
        var item = Activator.CreateInstance<T>();
        item.Name = name;
        item.Text = text;
        item.Size = size;
        if (size == RibbonItemSize.Large)
            item.LargeImage.IconID = iconID;
        else
            item.SmallImage.IconID = iconID;
        return item;
    }
    RibbonGalleryItem CreateGalleryItem(string text, string iconID)
    {
        var galleryItem = new RibbonGalleryItem
        {
            Text = text,
            Value = text,
            ToolTip = text
        };
        galleryItem.Image.IconID = iconID;
        return galleryItem;
    }

    RERComboBoxCommandBase PrepareComboBoxCommand(RERComboBoxCommandBase command)
    {
        command.FillItems();
        command.PropertiesComboBox.Width = Unit.Pixel(100);
        return command;
    }
}

@Html.DevExpress().Panel(settings =>
{
    settings.Name = "HeaderPanel";
    settings.ControlStyle.ForeColor = System.Drawing.Color.WhiteSmoke;
    settings.ControlStyle.BackColor = System.Drawing.Color.White;
    settings.ControlStyle.CssClass = "myMenuStyle";
    settings.FixedPosition = DevExpress.Web.PanelFixedPosition.WindowTop;
    settings.SettingsCollapsing.ExpandEffect = DevExpress.Web.PanelExpandEffect.Auto;
    settings.Height = Unit.Percentage(20);
    // Defines panel content
    settings.SetContent(() =>
    {
        // MVC Menu extension as a content
        Html.DevExpress().Menu(s =>
        {
            s.Name = "Menu";
            s.Items.Add(item =>
            {
                item.ItemStyle.Cursor = CursorType.None.ToString();
                item.Image.Url = "~/Images/M4PL_Logo.png";
                item.Text = "";
                item.Image.Height = 50;
                s.EnableAnimation = false;
            });
        }).GetHtml();


        Html.DevExpress().Ribbon(s1 =>
        {
            s1.Name = "MyRibbon";
            s1.ClientSideEvents.CommandExecuted = "onCommandExecuted";
            var homeTab = s1.Tabs.Add("M4PL");
            var customerTab = s1.Tabs.Add("Customer");
            var vendorsTab = s1.Tabs.Add("Vendors");
            var financeTab = s1.Tabs.Add("Finance");
            var scannerTab = s1.Tabs.Add("Scanner");
            var hkTab = s1.Tabs.Add("House Keeping");
            var adminTab = s1.Tabs.Add("Admin");

            homeTab.Groups.Add(vwGp =>
            {
                vwGp.Name = "view";
                vwGp.Text = "";

                vwGp.Items.Add(MVCxRibbonItemType.ButtonItem, fv =>
                {
                    fv.Text = "Form View";
                    fv.Name = "FormView";
                    fv.Size = RibbonItemSize.Large;
                    ((RibbonButtonItem)fv).LargeImage.IconID = IconID.ToolboxitemsTableofcontent32x32;
                });

                vwGp.Items.Add(MVCxRibbonItemType.ButtonItem, dsv =>
                {
                    dsv.Text = "DataSheet View";
                    dsv.Name = "DataSheetView";
                    dsv.Size = RibbonItemSize.Large;
                    ((RibbonButtonItem)dsv).LargeImage.IconID = IconID.SpreadsheetFreezepanes32x32;
                });
            });

            homeTab.Groups.Add(cbGp =>
            {
                cbGp.Name = "Clipboard";
                cbGp.Text = "Clipboard";
                cbGp.Image.IconID = IconID.ReportsReport32x32;
                cbGp.ShowDialogBoxLauncher = true;

                cbGp.Items.Add(new RERPasteCommand(RibbonItemSize.Large) { Text = "Paste", ToolTip = "Ctrl + V" });
                cbGp.Items.Add(new RERCutCommand(RibbonItemSize.Small) { Text = "Cut", ToolTip = "Ctrl + X" });
                cbGp.Items.Add(new RERCopyCommand(RibbonItemSize.Small) { Text = "Copy", ToolTip = "Ctrl + C" });
            });

            homeTab.Groups.Add(sfGp =>
            {
                sfGp.Name = "SortFilter";
                sfGp.Text = "Sort & Filter";
                sfGp.Image.IconID = IconID.ReportsReport32x32;
                sfGp.ShowDialogBoxLauncher = true;


                sfGp.Items.Add(CreateButtonItem<RibbonButtonItem>("ClearFilter", "Clear Filter", RibbonItemSize.Large, IconID.FilterClearfilter32x32));

                sfGp.Items.Add(CreateButtonItem<RibbonButtonItem>("Ascending", "Ascending", IconID.DataSortasc16x16office2013));
                sfGp.Items.Add(CreateButtonItem<RibbonButtonItem>("Decending", "Decending", IconID.DataSortdesc16x16office2013));
                sfGp.Items.Add(CreateButtonItem<RibbonButtonItem>("RemoveSort", "Remove Sort", IconID.DataSortasc16x16gray));

                sfGp.Items.Add(CreateButtonItem<RibbonButtonItem>("ChooseColumns", "Choose Columns", IconID.DataSelectdata16x16));
                sfGp.Items.Add(CreateButtonItem<RibbonButtonItem>("Advanced", "Advanced", IconID.ActionsFilter16x16devav));
                sfGp.Items.Add(CreateButtonItem<RibbonButtonItem>("ToggleFilter", "Toggle Filter", IconID.FilterFilter16x16));
                sfGp.Items.Add(CreateButtonItem<RibbonButtonItem>("NewButton", "Alias Columns", IconID.DataSelectdata16x16));
            });

            homeTab.Groups.Add(rdGp =>
            {
                rdGp.Name = "Records";
                rdGp.Text = "Records";
                rdGp.Image.IconID = IconID.ReportsReport32x32;
                rdGp.ShowDialogBoxLauncher = true;

                rdGp.Items.Add(CreateButtonItem<RibbonDropDownButtonItem>("RefreshAll", "Refresh All", RibbonItemSize.Large, IconID.ActionsRefresh32x32office2013));

                rdGp.Items.Add(CreateButtonItem<RibbonButtonItem>("New", "New", IconID.ActionsInsert16x16office2013));
                rdGp.Items.Add(CreateButtonItem<RibbonButtonItem>("Save", "Save", IconID.ActionsSave16x16devav));
                rdGp.Items.Add(CreateButtonItem<RibbonButtonItem>("Delete", "Delete", IconID.EditDelete16x16));
            });

            homeTab.Groups.Add(fdGp =>
            {
                fdGp.Name = "Find";
                fdGp.Text = "Find";
                fdGp.Image.IconID = IconID.ReportsReport32x32;
                fdGp.ShowDialogBoxLauncher = true;

                fdGp.Items.Add(CreateButtonItem<RibbonDropDownButtonItem>("Find", "Find", RibbonItemSize.Large, IconID.FindFind32x32));

                fdGp.Items.Add(CreateButtonItem<RibbonButtonItem>("Replace", "Replace", IconID.FormatReplace16x16));
                fdGp.Items.Add(CreateButtonItem<RibbonButtonItem>("GoTo", "Go To", IconID.ArrowsNext16x16office2013));
                fdGp.Items.Add(CreateButtonItem<RibbonButtonItem>("Select", "Select", IconID.ActionsSelect16x16office2013));
            });


        }).GetHtml();

    });
}).GetHtml()

<div class="set_ClrBoth"></div>

<style>
    .dxmLite_Office2010Black .dxm-main .dxm-hovered {
        background: none;    border: none;
    }

    .dxmLite_Office2010Blue .dxm-main .dxm-hovered {
        background: none;    border: none;
    }

    .dxmLite_Office2010Black .dxm-main .dxm-hovered {
        background: none;    border: none;
    }

    .dxmLite_Office2010Silver .dxm-main .dxm-hovered {
        background: none;    border: none;
    }

    .dxmLite_Office2003Blue .dxm-main .dxm-hovered {
        background: none;    border: none;
    }

    .dxmLite_Office2003Olive .dxm-main .dxm-hovered {
        background: none;    border: none;
    }

    .dxmLite_Office2003Silver .dxm-main .dxm-hovered {
        background: none;    border: none;
    }

    .dxmLite_Default .dxm-main .dxm-hovered {
        background: none;    border: none;
    }

    .dxmLite_Metropolis .dxm-main .dxm-hovered {
        background: none;    border: none;
    }

    .dxmLite_Moderno .dxm-main .dxm-hovered {
        background: none;    border: none;
    }

    .dxmLite_Aqua .dxm-main .dxm-hovered {
        background: none;    border: none;
    }

    .dxmLite_Glass .dxm-main .dxm-hovered {
        background: none;    border: none;
    }

    .dxmLite_Mulberry .dxm-main .dxm-hovered {
        background: none;    border: none;
    }

    .dxmLite_Youthful .dxm-main .dxm-hovered {
        background: none;    border: none;
    }

    .dxmLite_DevEx .dxm-main .dxm-hovered {
        background: none;    border: none;
    }

    .dxmLite_MetropolisBlue .dxm-main .dxm-hovered {
        background: none;    border: none;
    }

    .dxmLite_RedWine .dxm-main .dxm-hovered {
        background: none;    border: none;
    }

    .dxmLite_BlackGlass .dxm-main .dxm-hovered {
        background: none;    border: none;
    }

    .dxmLite_PlasticBlue .dxm-main .dxm-hovered {
        background: none;    border: none;
    }

    .dxmLite_SoftOrange .dxm-main .dxm-hovered {
        background: none;    border: none;
    }

    .dxmLite_iOS .dxm-main .dxm-hovered {
        background: none;    border: none;
    }
</style>
@*Header Ribbon*@