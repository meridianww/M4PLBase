@*Copyright (2016) Meridian Worldwide Transportation Group
    All Rights Reserved Worldwide
    ====================================================================================================================================================
    Program Title:                                Meridian 4th Party Logistics(M4PL)
    Programmer:                                   Deepika
    Date Programmed:                              21/3/2016
    Program Name:                                 _Layout
    Purpose:                                      Provides view for Layout which includes header,menus and content,footer,popups throughout the application

    ====================================================================================================================================================*@

@*LAYOUT*@

@using System.Drawing;
@using System.Web.UI.WebControls;
<!DOCTYPE html>

<html>

<head>
    <meta charset="UTF-8" />
    <title>@ViewBag.Title</title>
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    @Scripts.Render("~/bundles/jquery")
    <script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>
    <link href="~/Content/Common.css" rel="stylesheet" />
    <link href="~/Content/ToasterMessages.css" rel="stylesheet" />
    <script src="~/Scripts/App/layout.js"></script>
    <script src="~/Scripts/App/ribbon.js"></script>
    <script src="~/Scripts/App/chosencolumns.js"></script>
    <link href="~/Content/ToasterMessages.css" rel="stylesheet" />
    @RenderSection("Head", required: false)

    @Html.DevExpress().GetStyleSheets(
        new StyleSheet { ExtensionSuite = ExtensionSuite.Icons },
        new StyleSheet { ExtensionSuite = ExtensionSuite.NavigationAndLayout },
        new StyleSheet { ExtensionSuite = ExtensionSuite.Editors },
        new StyleSheet { ExtensionSuite = ExtensionSuite.HtmlEditor },
        new StyleSheet { ExtensionSuite = ExtensionSuite.GridView },
        new StyleSheet { ExtensionSuite = ExtensionSuite.PivotGrid },
        new StyleSheet { ExtensionSuite = ExtensionSuite.Chart },
        new StyleSheet { ExtensionSuite = ExtensionSuite.Report },
        new StyleSheet { ExtensionSuite = ExtensionSuite.Scheduler },
        new StyleSheet { ExtensionSuite = ExtensionSuite.TreeList },
        new StyleSheet { ExtensionSuite = ExtensionSuite.RichEdit },
        new StyleSheet { ExtensionSuite = ExtensionSuite.Spreadsheet },
        new StyleSheet { ExtensionSuite = ExtensionSuite.SpellChecker }
    )
    @Html.DevExpress().GetScripts(
        new Script { ExtensionSuite = ExtensionSuite.Icons },
        new Script { ExtensionSuite = ExtensionSuite.NavigationAndLayout },
        new Script { ExtensionSuite = ExtensionSuite.HtmlEditor },
        new Script { ExtensionSuite = ExtensionSuite.GridView },
        new Script { ExtensionSuite = ExtensionSuite.PivotGrid },
        new Script { ExtensionSuite = ExtensionSuite.Editors },
        new Script { ExtensionSuite = ExtensionSuite.Chart },
        new Script { ExtensionSuite = ExtensionSuite.Report },
        new Script { ExtensionSuite = ExtensionSuite.Scheduler },
        new Script { ExtensionSuite = ExtensionSuite.TreeList },
        new Script { ExtensionSuite = ExtensionSuite.RichEdit },
        new Script { ExtensionSuite = ExtensionSuite.Spreadsheet },
        new Script { ExtensionSuite = ExtensionSuite.SpellChecker }
    )

    @{
        string Action = Convert.ToString(ViewContext.RouteData.Values["action"]), Controller = Convert.ToString(ViewContext.RouteData.Values["controller"]), Id = Convert.ToString(ViewContext.RouteData.Values["id"]);
        <script type="text/javascript">

            var UrlRoot = {};
            UrlRoot.indexURL = '@Url.Action("Index", Controller)';
            UrlRoot.deleteURL = '@Url.Action("Delete", Controller, new { Id = Id })';
            UrlRoot.createURL = '@Url.Action("Create", Controller)';
            UrlRoot.editURL = '@Url.Action("Edit", Controller)';
            UrlRoot.setGridProperties = '@Url.Action("SetGridProperties", Controller)';

            UrlRoot.getAllColumns = '@Url.Action("GetAllColumns", "AllSettings")';
            UrlRoot.saveAliasColumn = '@Url.Action("SaveAliasColumn", "AllSettings")';
            UrlRoot.saveChosenColumns = '@Url.Action("SaveChosenColumns", "AllSettings")';
            UrlRoot.nextPrevious = '@Url.Action("NextPrevious", "AllSettings")';

            UrlRoot.action = '@Action';
            UrlRoot.controller = '@Controller';
            UrlRoot.id = '@Id';

            //var apiUrl = '@System.Configuration.ConfigurationManager.AppSettings["API_URL"].ToString()';

        </script>
    }

</head>

<body class="ribbonCollapse ribbonCollapse1">
    @Html.Partial("_Ribbon")

    @Html.DevExpress().Splitter(settings =>
    {
        settings.Name = "splOverview";
        settings.Height = Unit.Percentage(100);
        settings.FullscreenMode = true;

        settings.Panes.Add(pane =>
        {
            pane.Size = Unit.Percentage(15);
            pane.MinSize = 225;
            pane.MaxSize = 275;
            pane.ScrollBars = ScrollBars.Auto;
            pane.SetContent(() =>
            {
                Html.RenderPartial("_NavBar");
            });
        });

        settings.Panes.Add(pane =>
        {
            pane.Name = "gridContainer";
            pane.Size = Unit.Percentage(85);
            pane.MinSize = 600;
            pane.AutoHeight = true;
            pane.AutoWidth = true;
            //pane.SetContent(RenderBody().ToHtmlString() + Html.Partial("_Common"));
            pane.SetContent(() =>
            {
                ViewContext.Writer.Write(
                    @RenderBody()
                );
                ViewContext.Writer.Write(
                    @RenderSection("SectionViewStart", required: false)
                );
                if (ViewData["PartialView"] != null && ViewData["PartialView"].ToString() != "")
                {
                    Html.RenderPartial(ViewData["PartialView"].ToString());
                    ViewData["PartialView"] = "";
                }
                ViewContext.Writer.Write(
                    @RenderSection("SectionViewEnd", required: false)
                );
            });
        });

    }).GetHtml()

    @RenderSection("Scripts", required: false)

    @*Choose Columns*@
    @*@Html.Partial("_LoadingPanel")*@


    <div class="row">
        @Html.DevExpress().PopupControl(settings =>
        {
            settings.Name = "popupchooseCols";
            settings.PopupElementID = "MyRibbon_T0G2I4";
            settings.AllowDragging = true;
            settings.ShowOnPageLoad = false;
            settings.CloseAction = CloseAction.CloseButton;
            settings.PopupVerticalAlign = PopupVerticalAlign.Below;
            settings.PopupHorizontalAlign = PopupHorizontalAlign.OutsideRight;
            settings.ControlStyle.CssClass = "popupchooseCols";

            settings.HeaderText = "Choose Columns";
            settings.ClientSideEvents.EndCallback = "function(s, e) { CallbackPanel.PerformCallback(); }";
            settings.Height = Unit.Pixel(130);
            settings.Width = Unit.Percentage(40);
            settings.SetContent(() =>
            {
                Html.RenderPartial("_ChooseColumns");
            });
        }).GetHtml()
        @Html.DevExpress().LoadingPanel(
        settings =>
        {
            settings.Name = "LoadingPanel";
            settings.Modal = true;

        }
    ).GetHtml()

    </div>

    @*Choose Columns*@

    <button type="button" id="deletecol" class="btn btn-primary btn-md dis_None" data-toggle="modal" data-target="#myModal"></button>
    <!-- Modal -->
    <div class="modal fade" id="myModal" role="dialog" data-backdrop="false">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <p><span class="glyphicon glyphicon-globe glyphiconGlobe"></span>&nbsp;M4PL Delete</p>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title"><a href="#" class="btn btn-primary btn-md"><span class="glyphicon glyphicon-question-sign"></span></a>&nbsp;Delete Record</h4>
                </div>
                <div class="modal-body">
                    <form class="form-horizontal" role="form">
                        <div class="form-group">
                            <label class="control-label col-sm-2 alignCenter" for="email">Message:</label>
                            <div class="col-sm-10">
                                <textarea class="form-control-static textareaWidth" rows="5" id="comment" readonly>Do you really want to delete this record?</textarea>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <div class="row">
                        <div class="col-md-offset-0 col-md-8 ">
                            <button type="button" id="btnPopDelSubmit" class="btn btn-default popBtnWidth" onclick="deleteRecord()">OK</button>
                            <button type="button" id="btnPopDelclose" class="btn btn-default popBtnWidth" data-dismiss="modal">Cancel</button>
                            <p class="pull-left msgdelMargintop">Message reference #:5.0</p>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>

    @*<div class="row">
            @Html.DevExpress().PopupControl(settings =>
            {
                settings.Name = "popupdelete";
                settings.PopupElementID = "MyRibbon_T0G3I3";
                settings.AllowDragging = true;
                settings.ShowOnPageLoad = false;
                settings.CloseAction = CloseAction.CloseButton;
                settings.PopupVerticalAlign = PopupVerticalAlign.Below;
                settings.PopupHorizontalAlign = PopupHorizontalAlign.OutsideRight;
                settings.ControlStyle.CssClass = "popupdelete";
                settings.HeaderText = "Delete";
                settings.SetContent(() =>
                {
                    Html.RenderPartial("_DeleteBox");
                });
            }).GetHtml()

        </div>*@

</body>



</html>
@*LAYOUT*@