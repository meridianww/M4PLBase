@using System.Drawing;
@using System.Web.UI.WebControls;
@model M4PL_API_CommonUtils.Response<M4PL.Entities.ColumnsAlias>
@{
    ViewBag.Title = "Save Alias Column";
}

<div class="container-fluid">
    @Html.DevExpress().Menu(settings =>
    {
        settings.Name = "mnuTitle";
        settings.Width = Unit.Percentage(100);

        settings.Items.Add(item =>
        {
            item.Text = "Save Columns Alias";
            item.Image.IconID = DevExpress.Web.ASPxThemes.IconID.BusinessobjectsBodepartment16x16;
        });
    }).GetHtml()
    <div class="form-group"></div>
    <form id="frmColumnsAlias" enctype="multipart/form-data" method="post" action='@Url.Action("SaveAliasColumn", "AllSettings")'>
        @Html.Partial("_Messages", Model)
        <div class="row">
            <div class="col-lg-12 col-md-12 col-sm-12 form-group">
                @{
                    Html.DevExpress().ComboBox(
                    settings =>
                    {
                        settings.Name = "ColPageName";
                        settings.Width = Unit.Percentage(20);
                        settings.ControlStyle.CssClass = "form-control";
                        settings.Properties.ValueType = typeof(string);
                        settings.SelectedIndex = 0;
                        settings.Properties.EnableCallbackMode = true;
                        settings.Properties.EnableClientSideAPI = true;
                        settings.Properties.ClientSideEvents.SelectedIndexChanged = "function(s, e) { grid.PerformCallback(); }";
                        settings.Properties.Items.Add("Contact");
                        settings.Properties.Items.Add("Organization");
                        settings.Properties.Items.Add("User");
                        settings.Properties.Items.Add("Menu Driver", "MenuDriver");
                    }).GetHtml();
                    
                    Html.DevExpress().GridView(settings =>
                    {
                        settings.Name = "grid";
                        settings.KeyFieldName = "ColColumnName";
                        settings.CallbackRouteValues = new { Controller = "AllSettings", Action = "SaveAliasColumn" };
                        settings.CustomActionRouteValues = new { Controller = "AllSettings", Action = "SaveAliasColumn" };
                        settings.SettingsEditing.BatchUpdateRouteValues = new { Controller = "AllSettings", Action = "BatchEditingUpdateModel" };
                        settings.ClientSideEvents.BeginCallback = "function(s, e) { e.customArgs['ColPageName'] = ColPageName.GetValue(); }";
                        settings.Width = Unit.Percentage(100);
                        settings.EnableCallbackAnimation = true;
                        settings.EnableCallbackCompression = true;
                        
                        settings.SettingsEditing.Mode = GridViewEditingMode.Batch;
                        settings.SettingsEditing.BatchEditSettings.EditMode = GridViewBatchEditMode.Row;
                        settings.SettingsEditing.BatchEditSettings.StartEditAction = GridViewBatchStartEditAction.Click;

                        settings.SettingsPager.Visible = true;
                        settings.SettingsPager.PageSize = 10;
                        settings.SettingsPager.Position = PagerPosition.TopAndBottom;
                        settings.SettingsPager.FirstPageButton.Visible = true;
                        settings.SettingsPager.LastPageButton.Visible = true;
                        settings.SettingsPager.PageSizeItemSettings.Visible = true;
                        settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "5", "10", "20", "50" };

                        settings.Columns.Add(c =>
                        {
                            c.Caption = "Column Name";
                            c.FieldName = "ColColumnName";
                            c.EditFormSettings.Visible = DefaultBoolean.False;
                        });
                        settings.Columns.Add("ColAliasName", "Alias Name", MVCxGridViewColumnType.TextBox);
                        settings.Columns.Add("ColIsVisible", "Visible", MVCxGridViewColumnType.CheckBox);
                        settings.Columns.Add("ColIsDefault", "Default", MVCxGridViewColumnType.CheckBox);
                        settings.Columns.Add("ColCaption", "Caption", MVCxGridViewColumnType.TextBox);
                        settings.Columns.Add("ColDescription", "Description", MVCxGridViewColumnType.Memo);

                        //settings.ClientSideEvents.BatchEditStartEditing = "gridView_BatchEditStartEditing";
                        //settings.ClientSideEvents.BatchEditEndEditing = "gridView_BatchEditEndEditing";
                        //settings.ClientSideEvents.BatchEditRowValidating = "gridView_BatchEditRowValidating";
                        settings.CellEditorInitialize = (s, e) =>
                        {
                            ASPxEdit editor = (ASPxEdit)e.Editor;
                            editor.ValidationSettings.Display = Display.None;
                        };

                        settings.PreRender = (s, e) =>
                        {
                            M4PL_Apln.Models.Settings.SetFilterRowVisibility(s as MVCxGridView, Convert.ToBoolean(Model.ShowFilterRow));
                        };
                        settings.BeforeGetCallbackResult = (s, e) =>
                        {
                            M4PL_Apln.Models.Settings.SetFilterRowVisibility(s as MVCxGridView, Convert.ToBoolean(Model.ShowFilterRow));
                        };

                        settings.Settings.ShowFilterRowMenu = true;
                        settings.Settings.ShowFilterBar = GridViewStatusBarMode.Auto;

                    }).Bind(Model.DataList).GetHtml();
                }
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="text-center">
                @Html.DevExpress().Button(settings =>
                {
                    settings.Name = "btnSave";
                    settings.Text = "Save";
                    settings.ControlStyle.CssClass = "btn btn-primary";
                    settings.UseSubmitBehavior = true;

                }).GetHtml()
                @Html.DevExpress().Button(settings =>
                {
                    settings.Name = "btnCancel";
                    settings.Text = "Cancel";
                    settings.UseSubmitBehavior = false;
                    settings.ControlStyle.CssClass = "btn btn-default";
                    settings.RouteValues = Url.Action("Index", "Organization");
                }).GetHtml()
            </div>
        </div>
    </form>

</div>
