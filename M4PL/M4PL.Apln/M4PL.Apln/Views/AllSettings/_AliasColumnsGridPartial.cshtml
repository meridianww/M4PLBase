@using System.Drawing;
@using System.Web.UI.WebControls;
@model M4PL_API_CommonUtils.Response<M4PL.Entities.ColumnsAlias>
@Html.DevExpress().GridView(settings =>
{
    settings.Name = "gvColumnAliases";
    settings.KeyFieldName = "ColColumnName";
    settings.CallbackRouteValues = new { Controller = "AllSettings", Action = "AliasColumnsGridPartial" };
    settings.CustomActionRouteValues = new { Controller = "AllSettings", Action = "AliasColumnsGridPartial" };
    settings.SettingsEditing.BatchUpdateRouteValues = new { Controller = "AllSettings", Action = "BatchEditingUpdateModel" };
    settings.ClientSideEvents.BeginCallback = "function(s, e) { e.customArgs['ColPageName'] = ColPageName.GetValue(); }";
    settings.Width = Unit.Percentage(100);
    settings.EnableCallbackAnimation = true;
    settings.EnableCallbackCompression = true;
    
    settings.Settings.ShowStatusBar = GridViewStatusBarMode.Hidden;

    settings.SettingsEditing.Mode = GridViewEditingMode.Batch;
    settings.SettingsEditing.BatchEditSettings.EditMode = GridViewBatchEditMode.Row;
    settings.SettingsEditing.BatchEditSettings.StartEditAction = GridViewBatchStartEditAction.DblClick;

    settings.SettingsPager.Visible = true;
    settings.SettingsPager.PageSize = 10;
    settings.SettingsPager.Position = PagerPosition.TopAndBottom;
    settings.SettingsPager.FirstPageButton.Visible = true;
    settings.SettingsPager.LastPageButton.Visible = true;
    settings.SettingsPager.PageSizeItemSettings.Visible = true;
    settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "5", "10", "20", "50" };

    settings.Columns.Add(c =>
    {
        c.Caption = "Column Name";
        c.FieldName = "ColColumnName";
        c.EditFormSettings.Visible = DefaultBoolean.False;
        c.CellStyle.BackColor = Color.FromArgb(155 ,235, 242);//"#9BEBF2"
    });
    settings.Columns.Add("ColAliasName", "Alias Name", MVCxGridViewColumnType.TextBox);
    settings.Columns.Add("ColIsVisible", "Visible", MVCxGridViewColumnType.CheckBox);
    settings.Columns.Add("ColIsDefault", "Default", MVCxGridViewColumnType.CheckBox);
    settings.Columns.Add("ColCaption", "Caption", MVCxGridViewColumnType.TextBox);
    settings.Columns.Add("ColDescription", "Description", MVCxGridViewColumnType.Memo);
    settings.CellEditorInitialize = (s, e) =>
    {
        ASPxEdit editor = (ASPxEdit)e.Editor;
        editor.ValidationSettings.Display = Display.None;
    };

    settings.PreRender = (s, e) =>
    {
        M4PL_Apln.Models.Settings.SetFilterRowVisibility(s as MVCxGridView, Convert.ToBoolean(Model.ShowFilterRow));
    };
    settings.BeforeGetCallbackResult = (s, e) =>
    {
        M4PL_Apln.Models.Settings.SetFilterRowVisibility(s as MVCxGridView, Convert.ToBoolean(Model.ShowFilterRow));
    };

    settings.ClientLayout = (sender, e) =>
    {
        if (e.LayoutMode == ClientLayoutMode.Saving)
        {
            Session[M4PL_API_CommonUtils.SessionNames.ColumnAliasLayout] = e.LayoutData;
        }
        else
        {
            e.LayoutData = (string)Session[M4PL_API_CommonUtils.SessionNames.ColumnAliasLayout];
        }
    };

    settings.Settings.ShowFilterRowMenu = true;
    settings.Settings.ShowFilterBar = GridViewStatusBarMode.Auto;

}).Bind(Model.DataList).GetHtml()