@using System.Drawing;
@using System.Web.UI.WebControls;
@model M4PL_API.Controllers.HomeModel

@{
    ViewBag.Title = "Home";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["PartialView"] = "HomePartial";
}



<script type="text/javascript">
    // <![CDATA[
    $().ready(function () {
        function onComboBoxSelectedIndexChanged(s, e) {
            alert(s.GetValue());
        }


    });
    // ]]>

    function fun(s, e) {
        location.replace('/Home/theme?value=' + s.GetValue());
    }

</script>

<script type="text/javascript">
    function AddSelectedItems() {
        MoveSelectedItems(lbAvailable, lbChoosen);
        UpdateButtonState();
    }
    function AddAllItems() {
        MoveAllItems(lbAvailable, lbChoosen);
        UpdateButtonState();
    }
    function RemoveSelectedItems() {
        MoveSelectedItems(lbChoosen, lbAvailable);
        UpdateButtonState();
    }
    function RemoveAllItems() {
        MoveAllItems(lbChoosen, lbAvailable);
        UpdateButtonState();
    }
    function MoveSelectedItems(srcListBox, dstListBox) {
        srcListBox.BeginUpdate();
        dstListBox.BeginUpdate();
        var items = srcListBox.GetSelectedItems();
        for (var i = items.length - 1; i >= 0; i = i - 1) {
            dstListBox.AddItem(items[i].text, items[i].value);
            srcListBox.RemoveItem(items[i].index);
        }
        srcListBox.EndUpdate();
        dstListBox.EndUpdate();
    }
    function MoveAllItems(srcListBox, dstListBox) {
        srcListBox.BeginUpdate();
        var count = srcListBox.GetItemCount();
        for (var i = 0; i < count; i++) {
            var item = srcListBox.GetItem(i);
            dstListBox.AddItem(item.text, item.value);
        }
        srcListBox.EndUpdate();
        srcListBox.ClearItems();
    }
    function UpdateButtonState() {
        btnMoveAllItemsToRight.SetEnabled(lbAvailable.GetItemCount() > 0);
        btnMoveAllItemsToLeft.SetEnabled(lbChoosen.GetItemCount() > 0);
        btnMoveSelectedItemsToRight.SetEnabled(lbAvailable.GetSelectedItems().length > 0);
        btnMoveSelectedItemsToLeft.SetEnabled(lbChoosen.GetSelectedItems().length > 0);
    }
    MVCxClientGlobalEvents.AddControlsInitializedEventHandler(function (s, e) {
        UpdateButtonState();
    });
</script>

<div class="container-fluid">
    <div class="row">

        <div class="col-md-6">
            <h2>Welcome</h2>

        </div>

        <div class="col-md-offset-4 col-md-2 pull-right">

            <label class="form-inline">Themes</label>


            @Html.DevExpress().ComboBox(

                settings =>
                {
                    settings.Name = "comboBox1";
                    settings.Width = 180;
                    settings.ControlStyle.CssClass = "form-control";
                    settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                    settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
                    settings.SelectedIndex = 0;
                    settings.Properties.DisplayFormatString = "{0}";
                    settings.Properties.ValueType = typeof(string);
                    settings.Properties.Items.Add("--Select Theme--", "0");
                    settings.Properties.Items.Add("Office2010 Blue", "Office2010Blue");
                    settings.Properties.Items.Add("Office2010 Black", "Office2010Black");
                    settings.Properties.Items.Add("Office2010Silver", "Office2010Silver");
                    settings.Properties.Items.Add("Office2003Blue", "Office2003Blue");
                    settings.Properties.Items.Add("Office2003Olive", "Office2003Olive");
                    settings.Properties.Items.Add("Office2003Silver", "Office2003Silver");
                    settings.Properties.Items.Add("Default");
                    settings.Properties.Items.Add("Metropolis");
                    settings.Properties.Items.Add("Moderno");
                    settings.Properties.Items.Add("Aqua");
                    settings.Properties.Items.Add("Glass");
                    settings.Properties.Items.Add("Mulberry");
                    settings.Properties.Items.Add("Youthful");
                    settings.Properties.Items.Add("DevEx");
                    settings.Properties.Items.Add("MetropolisBlue");
                    settings.Properties.Items.Add("Metropolis");
                    settings.Properties.Items.Add("Moderno");
                    settings.Properties.Items.Add("Aqua");
                    settings.Properties.Items.Add("RedWine");
                    settings.Properties.Items.Add("Glass");
                    settings.Properties.Items.Add("BlackGlass");
                    settings.Properties.Items.Add("PlasticBlue");
                    settings.Properties.Items.Add("Mulberry");
                    settings.Properties.Items.Add("SoftOrange");
                    settings.Properties.Items.Add("Youthful");
                    settings.Properties.Items.Add("DevEx");
                    settings.Properties.Items.Add("iOS");

                    // s.GetValue()
                    settings.Properties.ClientSideEvents.SelectedIndexChanged = "fun";
                }
            ).GetHtml()


        </div>
    </div>
    <div class="row">
        <table>
            <tr>
                <td>
                    @Html.DevExpress().ListBox(settings =>
                   {
                       settings.Name = "lbAvailable";
                       settings.Properties.SelectionMode = ListEditSelectionMode.CheckColumn;
                       settings.Properties.Items.Add("ASPxHTMLEditor Suite", "ASPxHTMLEditor");
                       settings.Properties.Items.Add("ASPxEditors Library", "ASPxEditors");
                       settings.Properties.Items.Add("ASPxperience Suite", "ASPxperience");
                       settings.Properties.Items.Add("ASPxPivotGrid Suite", "ASPxPivotGrid");
                       settings.Properties.Items.Add("XtraReports Suite", "XtraReports");
                       settings.Properties.Items.Add("XtraCharts Suite", "XtraCharts");
                       settings.Properties.ClientSideEvents.SelectedIndexChanged = "function(s, e) { UpdateButtonState(); }";
                       settings.Properties.EnableClientSideAPI = true;
                       settings.Width = System.Web.UI.WebControls.Unit.Pixel(200);
                   }).GetHtml()
                </td>
                <td>
                    @Html.DevExpress().ListBox(settings =>
                   {
                       settings.Name = "lbChoosen";
                       settings.Properties.SelectionMode = ListEditSelectionMode.CheckColumn;
                       settings.Properties.ClientSideEvents.SelectedIndexChanged = "function(s,e) { UpdateButtonState(); }";
                       settings.Properties.EnableClientSideAPI = true;
                       settings.Width = System.Web.UI.WebControls.Unit.Pixel(200);
                   }).GetHtml()
                </td>
            </tr>
        </table>
        @Html.DevExpress().Button(settings =>
{
    settings.Name = "btnMoveSelectedItemsToRight";
    settings.Text = "Add";
    settings.ClientSideEvents.Click = "function(s, e) { AddSelectedItems();  }";
}).GetHtml()
        @Html.DevExpress().Button(settings =>
{
    settings.Name = "btnMoveAllItemsToRight";
    settings.Text = "Add All";
    settings.ClientSideEvents.Click = "function(s, e) { AddAllItems(); }";
}).GetHtml()
        @Html.DevExpress().Button(settings =>
{
    settings.Name = "btnMoveSelectedItemsToLeft";
    settings.Text = "Remove ";
    settings.ClientSideEvents.Click = "function(s, e) { RemoveSelectedItems(); }";
}).GetHtml()
        @Html.DevExpress().Button(settings =>
{
    settings.Name = "btnMoveAllItemsToLeft";
    settings.Text = "Remove All";
    settings.ClientSideEvents.Click = "function(s, e) { RemoveAllItems(); }";
}).GetHtml()
    </div>
</div>
<div class="form-group"></div>
@*@section SectionViewStart{
        <div class="col-md-12">
        Start content will come here
    </div>
    }

    @section SectionViewEnd{
        <div class="col-md-12">
            End content will come here
        </div>
    }*@
