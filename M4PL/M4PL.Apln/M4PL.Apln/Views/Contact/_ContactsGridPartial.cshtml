@*Copyright (2016) Meridian Worldwide Transportation Group
    All Rights Reserved Worldwide
    ====================================================================================================================================================
    Program Title:                                Meridian 4th Party Logistics(M4PL)
    Programmer:                                   Deepika
    Date Programmed:                              11/4/2016
    Program Name:                                 _ContactsGridPartial
    Purpose:                                      Provides view for Grid of Contact webpage

    ====================================================================================================================================================*@

@using System.Drawing;
@using System.Web.UI.WebControls;

@*Contact Grid*@

@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "grid";
        //built-in callbacks
        settings.CallbackRouteValues = new { Controller = "Contact", Action = "ContactsGridPartial" };
        //custom callbacks
        settings.CustomActionRouteValues = new { Controller = "Contact", Action = "ContactsGridPartial" };

        settings.Width = Unit.Percentage(100);
        settings.KeyFieldName = "ContactID";

        settings.SettingsBehavior.AllowFocusedRow = true;
        
        settings.SettingsPager.Visible = true;
        settings.SettingsPager.PageSize = 10;
        settings.SettingsPager.Position = PagerPosition.TopAndBottom;
        settings.SettingsPager.FirstPageButton.Visible = true;
        settings.SettingsPager.LastPageButton.Visible = true;
        settings.SettingsPager.PageSizeItemSettings.Visible = true;
        settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "5", "10", "20", "50" };
        settings.Settings.ShowGroupPanel = false;
        settings.SettingsBehavior.AllowGroup = Convert.ToBoolean(Model.AllowGroup);
        settings.SettingsBehavior.AllowSort = true;
        settings.Columns.Add(column =>
        {
            column.SetDataItemTemplateContent(c =>
            {
                ViewContext.Writer.Write(
                    "<a href=\"" + Url.Action("Edit", "Contact", new { Id = DataBinder.Eval(c.DataItem, "ContactID") }) + "\"><img title=\"Edit\" alt=\"Edit\" src=\"" + Url.Content("~/Images/phpQCqtZ2AM.jpg") + "\" /></a>"
                );
            });

            column.Settings.AllowDragDrop = DefaultBoolean.False;
            column.Settings.AllowSort = DefaultBoolean.False;
            column.Width = 20;
        });
        settings.Columns.Add(column =>
        {
            column.SetDataItemTemplateContent(c =>
            {
                ViewContext.Writer.Write(
                    "<img class='cursorpointer' src=\"" + Url.Content("~/Images/phpY5HbjYAM.jpg") + "\" title=\"Delete\" alt=\"Delete\" onclick=\"showDeletePopup(" + DataBinder.Eval(c.DataItem, "ContactID") + ")\" />"
                );
            });

            column.Settings.AllowDragDrop = DefaultBoolean.False;
            column.Settings.AllowSort = DefaultBoolean.False;
            column.Width = 20;
        });
        
        foreach (var item in M4PL.APIClient.API_ChooseColumns.GetAllColumns("Contact").Data.LstDisplayColumnName)
        {
            if (item.ColColumnName != settings.KeyFieldName)
            {
                settings.Columns.Add(column =>
                {
                    column.FieldName = item.ColColumnName;
                    column.Caption = item.ColAliasName;
                    column.ToolTip = item.ColCaption;
                });
            }
        }

        settings.Settings.ShowFilterBar = GridViewStatusBarMode.Auto;
        settings.Settings.ShowFilterRowMenu = true;

        //contact Saving Layout - Ramkumar on May 17 16
        settings.ClientLayout = (sender, e) =>
        {
            if (e.LayoutMode == ClientLayoutMode.Saving)
            {
                Session[M4PL_API_CommonUtils.SessionNames.ContactLayout] = e.LayoutData;
            }
            else
            {
                e.LayoutData = (string)Session[M4PL_API_CommonUtils.SessionNames.ContactLayout];
            }
        };
        //End saving layout

        settings.PreRender = (s, e) =>
        {
            M4PL_Apln.Models.Settings.SetFilterRowVisibility(s as MVCxGridView, Convert.ToBoolean(Model.ShowFilterRow));
        };
        settings.BeforeGetCallbackResult = (s, e) =>
        {
            M4PL_Apln.Models.Settings.SetFilterRowVisibility(s as MVCxGridView, Convert.ToBoolean(Model.ShowFilterRow));
        };

    });
}
@grid.Bind(Model.DataList).GetHtml()

@*Contact Grid*@