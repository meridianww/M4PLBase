@using System.Drawing;
@using System.Web.UI.WebControls;

@*Contact Grid*@

@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "grid";
        //built-in callbacks
        settings.CallbackRouteValues = new { Controller = "Contact", Action = "ContactsGridPartial" };
        //custom callbacks
        settings.CustomActionRouteValues = new { Cotroller = "Contact", Action = "ContactsGridPartial" };

        settings.Width = Unit.Percentage(100);
        //settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Auto;
        settings.KeyFieldName = "ContactID";

        settings.SettingsPager.Visible = true;
        settings.SettingsPager.PageSize = 10;
        settings.SettingsPager.Position = PagerPosition.TopAndBottom;
        settings.SettingsPager.FirstPageButton.Visible = true;
        settings.SettingsPager.LastPageButton.Visible = true;
        settings.SettingsPager.PageSizeItemSettings.Visible = true;
        settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "5", "10", "20", "50" };

        settings.Settings.ShowGroupPanel = false;
        settings.SettingsBehavior.AllowGroup = Convert.ToBoolean(Model.AllowGroup);
        settings.SettingsBehavior.AllowSort = true;
        settings.Columns.Add(column =>
        {
            column.SetDataItemTemplateContent(c =>
            {
                ViewContext.Writer.Write(Html.ActionLink("Edit", "Edit", null, new { Id = DataBinder.Eval(c.DataItem, "ContactID") },
                    new { style = "background: url('" + Url.Content("~/Images/phpQCqtZ2AM.jpg") + "') no-repeat center right; ", @class = "grid_Class"  })
                );
            });

            column.Settings.AllowDragDrop = DefaultBoolean.False;
            column.Settings.AllowSort = DefaultBoolean.False;
            column.Width = 40;
            column.FixedStyle = GridViewColumnFixedStyle.Left;
        });
        settings.Columns.Add(column =>
        {
            column.SetDataItemTemplateContent(c =>
            {
                ViewContext.Writer.Write(
                    Html.ActionLink("Remove", "Delete", null, new { Id = DataBinder.Eval(c.DataItem, "ContactID") },
                    new { onclick = "return confirm('Do you really want to delete this record?')", style = "background: url('" + Url.Content("~/Images/phpY5HbjYAM.jpg") + "') no-repeat center right; ", @class = "Grid1_Class" })
                );
            });

            column.Settings.AllowDragDrop = DefaultBoolean.False;
            column.Settings.AllowSort = DefaultBoolean.False;
            column.Width = 60;
            column.FixedStyle = GridViewColumnFixedStyle.Left;
        });
  
        foreach (var item in M4PL.APIClient.API_ChooseColumns.GetAllColumns("Contact").Data.LstDisplayColumnName)
        {
            if (item.ColColumnName != settings.KeyFieldName)
                settings.Columns.Add(item.ColColumnName, item.ColAliasName);
        }
 
        settings.Settings.ShowFilterBar = GridViewStatusBarMode.Auto;
        settings.Settings.ShowFilterRowMenu = true;

        //contact Saving Layout - Ramkumar on May 17 16
        settings.ClientLayout = (sender, e) =>
        {
            if (e.LayoutMode == ClientLayoutMode.Saving)
            {
                Session[M4PL_API_CommonUtils.SessionNames.ContactLayout] = e.LayoutData;
            }
            else
            {
                e.LayoutData = (string)Session[M4PL_API_CommonUtils.SessionNames.ContactLayout];
            }
        };
        //End saving layout
        
        settings.PreRender = (s, e) =>
        {
            M4PL_Apln.Models.Settings.SetFilterRowVisibility(s as MVCxGridView, Convert.ToBoolean(Model.ShowFilterRow));
        };
        settings.BeforeGetCallbackResult = (s, e) =>
        {
            M4PL_Apln.Models.Settings.SetFilterRowVisibility(s as MVCxGridView, Convert.ToBoolean(Model.ShowFilterRow));
        };

    });
}
@grid.Bind(Model.DataList).GetHtml()

@*Contact Grid*@